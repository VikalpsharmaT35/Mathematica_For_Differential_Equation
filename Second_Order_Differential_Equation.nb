(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    275993,       5697]
NotebookOptionsPosition[    269589,       5586]
NotebookOutlinePosition[    269961,       5602]
CellTagsIndexPosition[    269918,       5599]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Practical - 2", "Title",
 CellChangeTimes->{{3.8787356913834486`*^9, 
  3.8787357177560577`*^9}},ExpressionUUID->"28b35855-af2a-432a-a7bf-\
12be2f89a972"],

Cell["\<\

To solve 2nd order differential equation and plotting its solutions \
\>", "Subtitle",
 CellChangeTimes->{{3.878735720578006*^9, 
  3.8787357639070177`*^9}},ExpressionUUID->"61ea5dca-0b9b-4354-b335-\
800fd8790f63"],

Cell["", "Section",
 CellChangeTimes->{{3.878735768031024*^9, 3.8787358045453568`*^9}, 
   3.8790635808981185`*^9},ExpressionUUID->"da3c6fb1-65d2-4de6-bc87-\
d83f1204aa3a"],

Cell[CellGroupData[{

Cell["Question - 1:  y\[CloseCurlyQuote]\[CloseCurlyQuote] + y\
\[CloseCurlyQuote] - 6y = 0", "Section",
 CellChangeTimes->{{3.878735818059634*^9, 3.8787358371925507`*^9}, {
  3.8787358957752852`*^9, 3.878735896157074*^9}, {3.8787361729815164`*^9, 
  3.87873617378655*^9}},ExpressionUUID->"e5635c97-6603-4597-ae48-\
3df09f3466e5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}], "-", 
    RowBox[{"6", "*", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
   "0"}]}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}], "-", 
      RowBox[{"6", "*", 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"sol1", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
        RowBox[{
         RowBox[{"y", "'"}], "[", "x", "]"}], "-", 
        RowBox[{"6", "*", 
         RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "2", "]"}], "\[Equal]", "9"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", "sol1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "eq1", "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Magenta", ",", 
        RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Dashed"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.878735898985155*^9, 3.8787360786447735`*^9}, {
  3.879063380893793*^9, 3.879063399930934*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"a5c918ec-99ab-4dcc-8b62-07ae9a1d4a0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "6"}], " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]",
     MultilineFunction->None], "[", "x", "]"}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.8787359621899195`*^9, 3.878736016360693*^9, {3.878736054100993*^9, 
   3.8787360789286575`*^9}, {3.8790633888000464`*^9, 3.8790634004303207`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"ac69669f-2452-4708-ad6b-5b9b4b3d0aae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "x"}]], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", 
      TemplateBox[{"2"},
       "C"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8787359621899195`*^9, 3.878736016360693*^9, {3.878736054100993*^9, 
   3.8787360789286575`*^9}, {3.8790633888000464`*^9, 3.879063400445901*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"6abfff9f-a7e4-422e-9911-21c99e0bb35f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "x"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "9"}], " ", 
         SuperscriptBox["\[ExponentialE]", "6"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", "10"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"5", " ", "x"}]]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"6", "+", 
           RowBox[{"5", " ", "x"}]}]]}]}], ")"}]}], 
     RowBox[{"3", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", "10"]}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8787359621899195`*^9, 3.878736016360693*^9, {3.878736054100993*^9, 
   3.8787360789286575`*^9}, {3.8790633888000464`*^9, 3.879063400445901*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"6917f070-6c98-4f74-b98f-ad28777c3759"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1:eJwUVnc81t8Xt1f23h4PqazsrHzOfSgjskJZSWVEJcnOKMlKVkIaJFGRUWnQ
c1UkJKuys0ORVTa/7++v+zqvc+/7fe6559z3kXY/a3OSjoaGZoSBhub/q9qe
d9vaz8hg2+JlgdFLyZSBUu5z4C2DJQxRh1fENUrYtb0XEk7IYNOBbZNdZUkU
Yd9TIZ1HZfCDvbEVQxOJFJtdH6K97GWwpMiVU2TvBMrH+0FpKYYy+G1IcbpL
4VXKiUsFmT0GMjh2vDsnjvYqhe5YW46srgxWSLS4oHIslqIvqXD/pYoMXuzX
dg9VukIpyxqoHJSQwfd8jlZR/12iWARteykvIoO5BWyepvtfokzZaVcH8Mtg
Kim0m2Y+miLLl/aBZZsM/tIcIG24FkXJurbvq8oyGX/afeRSoXcERdPXvzt0
gYyl2C6wPb1xkdJudrf/wwwZj/F6T4Z/DKews6yMHR4j48bTA0MNemGU6EtP
/kW1k7FlzbeRTfdgyrfwrfiTn8mYtJT8eu5REEU+yEbCrIGM55dFCqyXAynt
PsuGfG//229mIPgi/wJFzuPA96WXZBzFXGnhuxVACXW7c6qvkoxLZqtH5t0C
KGQ7o9QHxWRcL7k5Oah6nhJoeVM2oYCMq8ndA3R5/pRG06mqM3fJ+P5wvsIp
fn+Kv0HKwJ4b/9nb4tvimM9R3u/oU2iMImOFvsPqAXvOUITJu6mlYWScuca7
w9P2NMVX/JJNeiAZ33APAb5AXwo/z84QZ18yvkXu9fnccoritS2MHXmSsf3A
y/OhDKco1Ywtd7e7k/HDIw2BkuBNObF6vn7GgYzN8sPLsho8KS8X64902JBx
YUTUF2EBTwr7H5HpKgsyjj9VVTji4UF5NkLlizYk49z+xsnXIicpjJ+3HePb
TcbjxMnqIy/dKY4fXReXdpHxy+mHI9wK7pTS2vKrfbJk3P4i/fB83jGK/QuH
0gei/+V3m7Zj1S03yqOyRyhBgIw1eS42uEq6UTYfbXSe4SZj//Cg836mRymF
d++v7WEiY40zdm2ywS6U1ex/yeK0ZNy6QLn3JtuZcjDDlEy7Lo3Hxhvoh2qd
KP/i/pg0zknjJj/qNr7tjhRjf71M535pTK8+yMKg5kDJ9U3ehbqkcclH/zuL
l+wpsx5D1ds7pPG2TREfzm47SpbT1ZGZBmlsdaySVibjEOW3XU9gx3tpXOT1
x6Jj2ZYCVkpsL99K45oe6gchd1vKhFGHSvQzaWz9IXe9A9lQ9Am5DyefSmPe
tL0PWV9aU1J0QhzMHknjq9QAsFSzpmgrS0Xw3ZPGtedeXk5Rs6LEC/k0PUiU
xhf5rz1JqTGn6HM20g3F/hePkQSlc/4AZYZhl674JWn8XMJ4vkTpAMVmfrwo
LVgaM1f4C1+tNKWIf3aPjTwpjf84dfS/X9tPaXlfW/PaTRqL/8h9dP/IfkrU
a9Lfv07S2P7CkOjam32UsYcDx31tpHHbHrmq9GtGlNJLjugIIY0Jlvtjysco
FLeQV8EZutKY1CbtF/cDUfj8hMu+aErjc40tcQHHECXY5ZvkfkVpjE0PmN47
CxSkbbOuJiKNbSqParme3EtZVC5XP8P/3/3n0sXpMvUphdu5fYq5pPHPHsk3
zs16FDa+lm4pJmmcn2/BmGmqS+mcNq1iXyDhtReuiYvReyixo0UzxjMk/JhU
/F66T4ui3cssd3mShJuz7j0b1NWi3G6oy1j5QcLj+Zsv0hk1KR73kf94Mwnf
6glzjmhWowjn3CuWbiDhgKRnM8PGapSmlK1B5/ckHPj009RMvSpFJaLGsuMV
CXObFFZnflGhrBzWUcKFJByrLhi6xa1MeWKZdWItj4R7jv4un9BXorjuX7ql
dZuEDe8abRafUaS8U3/OVpJOwj8k3/HwjMhTkjhVJ7KjSHg+pb9CY9tOigFj
itTXMBIutKbB2cd2UGbXZuy5g0i4et8B9cfVchS7ySd1sadJ2GxF3cEqajtF
8sPO++cdSVg0eN4ZdGUo+bVzzfV2JPxprPyywXMyZTv19T8RaxL+qhtK7VQn
UxRfm5thYxJO6LB96qEnTdEt85tj1yThQzdy98qMSFLeluiIuamQsJPrjF0I
hyQFPabbV6lAwnzn5wNu7JWgmBRmZB0hk/DQgpxodKkYxT73JVHIRcIdyeMi
bF+EKT3Z0d4rbCTcHnzluq+MMMXlplm6ORMJO5ssKfqHC1EaZF99HluRwsxB
wb4/9QQpI9y04pGdUnjH87MiStN8lKlt6We3N0nhfdvN4+yO81Fmmba/b6qV
wkpWOyL29PNSNtdNTgk/lcLGX7vv1fbyUEQnU16Wx/9nq9nImNByU6RHyeyH
o6Twny8JQuTtXJSdP54d3QyUwpoc0sVPLTgpWl+7mA6ckMLFMQO5ImXsFJta
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
/rGjlpsHWpiainbQDlLxt30m19O54XDySvI4HqA2yR/wEjThghcHHyupkQao
2zgvRzIf5wQBLpfmi5H9VJX2kbknMRzQfh2zChj0UWunnOKtereBipV/kdvt
XqrUliLnLNc2uM4ta/xkvYeaSp+VFWvGBuapV2MM33RTi+5wGk+1skB92sGt
c9rfqbmtlkHskkwga0tzp+bmN6qu0Dnp3ouMcJmvQp916Su1kcFG5fgwA0CG
QOi9553UYoeCDoFX9HDn0Efh3/yd1Kill/yb8vSwwR9StSegg+osLsAolkcH
r2/0LbaotVPrDrs+C86mBWH75HTRtDaqP23/tQgxWggSBDWPuVaqwcUnBoZ5
NOCpbPxj9egXKvvrDh2ds1uEo+rXTgfHRur1PT+OxIqsEwWf9ghkKX+ickc3
mm64rRF/juXYddE1UFUjitXul6wSMWlHvx1+XEftey1ZP2u3QjxdmPx+ZB1T
zQfXfFcG/hELQtkqGnlU6ugN0yvG5v+IOBPX8memNVSRkxULdTV/icriiYrn
OS+pMu5Xbo0+WSS4u1Z9zoaUUvveec01vJwndHWunPZrLKZ+qPMeqDSaJ07m
cJ09J/aAynUp+iN95xwR8MpkdDz0JnXfNeHekPVZIm3pdUubThK1tGFE+8KN
WSJ4uaH48Zo/lfsz7Vyk6izhF9ogSV5NJD5bdd6ZGJ0hRkIt2bmcbhLVlML0
s8ozhLHz7ZhY53tEf9iDiPCL08R8dlx0zOti4vTx/l23FH4TBQlP94LeC6Li
D1+l8YdJgstxqpqa9pLwrXb6aKM1SYTu2q5PTL0m5hT/5gw/mSAsG3J0DbKp
hFbapy7Sw59Ef9NUn+syJtJufAvMlv9JpKnH5UrKviOM5lRUFSrGiQ2692J3
wj4QQqpvBrQ+jxEVp9x6XR7WEa8kycLRbmOEV/tGjkRHPTGl9W42ZmmUaM/T
Fr0t/4kIX9aqPKYyShRBqXBu92eiU3nEWqlpmHAtOtDlxPiF+FuweWEjZJhg
i1tsuibcStjwWHNNKAwT1D+piRZGbQSLbO3+hqwhIue+m49STxuREcDGc9t2
iAhw2H2Aw6+d6BpSyDfjGSLkqc1sn291EAITV0UXMwYJhvO3pp6odhIG+6f1
OhwHiR9ypxqTPnYSv9sS0qxlBomMZOYE84WvBI95ysxM0A/iLOWbt2L8N+Id
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
OGwmbphDvsyG//8P9z95mVhI
          "]]}, Annotation[#, "Charting`Private`Tag$3690#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-10, 20}, {0., 4.1934401533651655`*^12}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           RowBox[{
             SuperscriptBox[
             "y", "\[Prime]\[Prime]", MultilineFunction -> None], "(", 
             TagBox["x", HoldForm], ")"}], "+", 
           RowBox[{
             SuperscriptBox["y", "\[Prime]", MultilineFunction -> None], "(", 
             TagBox["x", HoldForm], ")"}], "-", 
           RowBox[{
             RowBox[{"6"}], " ", 
             RowBox[{"y", "(", 
               TagBox["x", HoldForm], ")"}]}]}], "\[LongEqual]", "0"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8787359621899195`*^9, 3.878736016360693*^9, {3.878736054100993*^9, 
   3.8787360789286575`*^9}, {3.8790633888000464`*^9, 3.879063400570915*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"59ebdc5e-e334-4988-8966-4c21b3229771"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.8787358395570955`*^9},ExpressionUUID->"9763497e-932f-45f8-bb3f-\
400f7a730952"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question 2 : y\[CloseCurlyQuote]\[CloseCurlyQuote] - 9y\
\[CloseCurlyQuote] + 20y = sin x", "Section",
 CellChangeTimes->{{3.878736153410823*^9, 
  3.878736182234692*^9}},ExpressionUUID->"9d1f44d2-d481-4951-9d91-\
69adf23b4dc9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
    RowBox[{"9", "*", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"20", "*", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
   RowBox[{"Sin", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
      RowBox[{"9", "*", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
      RowBox[{"20", "*", 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"sol2", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
        RowBox[{"9", "*", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
        RowBox[{"20", "*", 
         RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
       RowBox[{"Sin", "[", "x", "]"}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "2", "]"}], "\[Equal]", "7"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", "sol2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "eq1", "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Dashed"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8787361856966968`*^9, 3.8787362664319696`*^9}, {
  3.87906340839881*^9, 3.879063423120947*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"477987d2-bd10-4e4e-810e-4d9e3af7a519"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"20", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{"9", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{
  3.8787362089299507`*^9, {3.878736239550129*^9, 3.8787362668817277`*^9}, 
   3.87906342438514*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"58eb04d9-4053-46f6-aceb-896556669963"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "5"}], " ", "x"}]], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "4"}], " ", "x"}]], " ", 
      TemplateBox[{"2"},
       "C"]}], "+", 
     RowBox[{
      FractionBox["1", "442"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "9"}], " ", 
         RowBox[{"Cos", "[", "x", "]"}]}], "+", 
        RowBox[{"19", " ", 
         RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8787362089299507`*^9, {3.878736239550129*^9, 3.8787362668817277`*^9}, 
   3.8790634245101414`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"5a280966-8b9a-4cf0-92b0-ef8f9e1df195"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"442", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "5"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", "2"]}]}], ")"}]}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "5"}], " ", "x"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3572"}], " ", 
          SuperscriptBox["\[ExponentialE]", "2"]}], "-", 
         RowBox[{"3094", " ", 
          SuperscriptBox["\[ExponentialE]", "10"]}], "+", 
         RowBox[{"4465", " ", 
          SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
         RowBox[{"3094", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"10", "+", "x"}]]}], "+", 
         RowBox[{"19", " ", 
          SuperscriptBox["\[ExponentialE]", "10"], " ", 
          RowBox[{"Cos", "[", "2", "]"}]}], "-", 
         RowBox[{"19", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"10", "+", "x"}]], " ", 
          RowBox[{"Cos", "[", "2", "]"}]}], "-", 
         RowBox[{"45", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"5", " ", "x"}]], " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], "+", 
         RowBox[{"36", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", "+", 
            RowBox[{"5", " ", "x"}]}]], " ", 
          RowBox[{"Cos", "[", "x", "]"}]}], "+", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[ExponentialE]", "10"], " ", 
          RowBox[{"Sin", "[", "2", "]"}]}], "-", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"10", "+", "x"}]], " ", 
          RowBox[{"Sin", "[", "2", "]"}]}], "+", 
         RowBox[{"95", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"5", " ", "x"}]], " ", 
          RowBox[{"Sin", "[", "x", "]"}]}], "-", 
         RowBox[{"76", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", "+", 
            RowBox[{"5", " ", "x"}]}]], " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8787362089299507`*^9, {3.878736239550129*^9, 3.8787362668817277`*^9}, 
   3.8790634245725956`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"c5549832-2153-454f-a139-18e88bf3a2d2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1: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
vTDfhv8D6cIhIA==
          "]]}, Annotation[#, "Charting`Private`Tag$4161#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {-513.7001589723335, 7.667418585259818*^6}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           RowBox[{
             SuperscriptBox[
             "y", "\[Prime]\[Prime]", MultilineFunction -> None], "(", 
             TagBox["x", HoldForm], ")"}], "+", 
           RowBox[{"9", " ", 
             RowBox[{
               SuperscriptBox["y", "\[Prime]", MultilineFunction -> None], 
               "(", 
               TagBox["x", HoldForm], ")"}]}], "+", 
           RowBox[{"20", " ", 
             RowBox[{"y", "(", 
               TagBox["x", HoldForm], ")"}]}]}], "\[LongEqual]", 
         RowBox[{"sin", "(", 
           TagBox["x", HoldForm], ")"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8787362089299507`*^9, {3.878736239550129*^9, 3.8787362668817277`*^9}, 
   3.8790634246975675`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ed16aa78-69e6-4d3d-b45e-0e3d60172199"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question 3: y\[CloseCurlyQuote]\[CloseCurlyQuote] - \
6y\[CloseCurlyQuote] + 5y = e-3x", "Section",
 CellChangeTimes->{{3.878736281544216*^9, 
  3.878736312568835*^9}},ExpressionUUID->"d25481be-82bc-4101-bffb-\
f70831407ea3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq1", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
    RowBox[{"6", "*", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"5", "*", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "3"}], "*", "x"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
      RowBox[{"6", "*", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
      RowBox[{"5", "*", 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], "*", "x"}]]}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"sol2", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
        RowBox[{"6", "*", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
        RowBox[{"5", "*", 
         RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], "*", "x"}]]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "4"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "2", "]"}], "\[Equal]", "7"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", "sol2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", "sol2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "eq1", "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Dashed"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.878736319438362*^9, 3.8787364138498325`*^9}, {
  3.8790634327969155`*^9, 3.87906345442183*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e163cf6f-e69d-46e1-a305-7c867becc6fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"6", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "3"}], " ", "x"}]]}]], "Output",
 CellChangeTimes->{{3.8787363628514605`*^9, 3.8787364144483633`*^9}, 
   3.879063454749178*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"9befd9ae-69ca-4f92-89d5-658876e39fe8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "x"}]], "32"], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"5", " ", "x"}]], " ", 
      TemplateBox[{"2"},
       "C"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8787363628514605`*^9, 3.8787364144483633`*^9}, 
   3.879063454749178*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"1c050de5-a155-46d1-b952-78704521d8e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "8"}], "-", 
         RowBox[{"3", " ", "x"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", "8"], "-", 
         RowBox[{"5", " ", 
          SuperscriptBox["\[ExponentialE]", "16"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"4", " ", "x"}]]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"8", " ", "x"}]]}], "+", 
         RowBox[{"224", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"6", "+", 
            RowBox[{"4", " ", "x"}]}]]}], "-", 
         RowBox[{"635", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"16", "+", 
            RowBox[{"4", " ", "x"}]}]]}], "-", 
         RowBox[{"224", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"6", "+", 
            RowBox[{"8", " ", "x"}]}]]}], "+", 
         RowBox[{"127", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"8", "+", 
            RowBox[{"8", " ", "x"}]}]]}]}], ")"}]}], 
      RowBox[{"32", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"5", " ", 
          SuperscriptBox["\[ExponentialE]", "8"]}]}], ")"}]}]]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8787363628514605`*^9, 3.8787364144483633`*^9}, 
   3.8790634547647815`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"42c3da87-a5ac-497d-b790-a1551535a04f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.879063459085808*^9, 
  3.879063459116823*^9}},ExpressionUUID->"616acb6e-3080-4240-b47a-\
79044be137c4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1: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
IamEJg5T6SKLijUjFKXptO1wWTI84fTT4PozTtl950vzrxZJSHsdK3RdYIJy
Ql98uX1SElKsszbHDk9QcoQlT6yySEFcwZePdSUTlLYA/YBakIKAA9JWNwIm
KZS0KLxHuRSY32j1m+T4S7FUNj+ikCsN9H58v52FZikZjzNtePN3gbV9Udsb
9VmKgy9/VPXnXVB2hPKJ02yW0nb2xY/02V3gKOFeWR41S9lrGsRM0pWFD43v
7jEuzlJUleR629tk4ZaI88Hc5jmKzr1awW9ce4CRVlYydGuB8kBsXz28lofz
xcbPtJ4sULb4S6Le98lDefLvx7HVC5SxuXPPrnMqgLMH8x21uQVKP2Oy/jtX
BfjIa+10y3aRIi76Y8RUfC9EudIJSussUdRVmDzfP9oHLJxmYY7TyxRby67u
Y/bKcGa3NdJkW6Fc0X52kitIGYoMnbfZZVYoj1ivtI4nKsOJwIDg12dXKGff
j6UsNShDysjTQMaPK5TuCMrUcRUVkKXN+eQ9XqXMCJVppbOqwkG/RMcJkzVK
8Y0rTFwf1SDlfkZWjdMaRb5RY5fygBqMPc/vfxCyRplfp/9ntakGcUP/2eqW
r1HQtdXlQg116DAbto6TWKdc+jESo5OnDs4KGqcUl9cpj/aLLLtFakDlIcoD
esIGZebmjcyVpxrA6nj423eFDcpsXOmcxzsNeJ5qYxrqsEHxdn61vDivAYtM
UUdbv2xQmpLfnjxkqwm3+r8b+eZsUhCPHn5TXgt63x69FPBuk3JQ55LIf5gW
7E9EKSGdm5Tm2qxvyme0YPZg0XgMyxaleODDnFqEFtgWB9/NubhF2Zw3iJH9
qQXVEfNvCiO2KKPOUUeVp7SAz/bC4MuMLcoHXu7Elm0t+II/qfGuZYsSxufZ
Vr1LG/b7yXR3qG1TFrmc/V9e1IYU00eM3ce2Kb/1xfq/XdeGuT3cigMu25SJ
iMIwm1htKOheufn34Talgs6/JKVAGxgrPIsWSrcpF14qtWlWaoNdwkD7v0/b
lEjqgfO7arWBH/ssy7yxTRkuDDvf+ksbtLnIe6LYcZBceyAl+I82jAT+0mMT
wEFad+1b6xltSBpJOhknjQPbN/K37Va1wfCUqSuPMg5y8aeCbuF0YJbKdv2B
Hg5IGVmN71l0IHNv3V2+wzj4qdBmy8StA8ceheSmWuLgvlJZrxmvDvxj0nkr
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
OUyPFOur1lg3ciAxFDttcEGP/B+SUSdZ
          "]]}, Annotation[#, "Charting`Private`Tag$4518#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-10, 10}, {-7.12393998189181*^10, 4.275872913222724*^10}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           RowBox[{
             SuperscriptBox[
             "y", "\[Prime]\[Prime]", MultilineFunction -> None], "(", 
             TagBox["x", HoldForm], ")"}], "-", 
           RowBox[{"6", " ", 
             RowBox[{
               SuperscriptBox["y", "\[Prime]", MultilineFunction -> None], 
               "(", 
               TagBox["x", HoldForm], ")"}]}], "+", 
           RowBox[{"5", " ", 
             RowBox[{"y", "(", 
               TagBox["x", HoldForm], ")"}]}]}], "\[LongEqual]", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", "3"}], " ", 
            TagBox["x", HoldForm]}]]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8787363628514605`*^9, 3.8787364144483633`*^9}, 
   3.8790634549835234`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"66bd5182-f560-4b29-afc4-154a786cdf9a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Question 4: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
    RowBox[{"4", "*", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"13", "*", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", "*", "x"}]], ")"}], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", "*", "x"}], "]"}]}]}]], "Input",
  CellChangeTimes->{{3.878736544549183*^9, 3.878736730390996*^9}},
  ExpressionUUID->"27a8600c-cfde-4532-a379-60ef8a7dbe15"]
}], "Section",
 CellChangeTimes->{{3.878736418457412*^9, 3.8787364328879642`*^9}, {
   3.878736537951122*^9, 3.878736542669487*^9}, 
   3.878736781697526*^9},ExpressionUUID->"f8ace0a3-f743-4d12-bb64-\
b9f4f3e4efc1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq1", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
    RowBox[{"4", "*", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
    RowBox[{"13", "*", 
     RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
   RowBox[{
    RowBox[{"(", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", "*", "x"}]], ")"}], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"3", "*", "x"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
      RowBox[{"4", "*", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
      RowBox[{"13", "*", 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", "*", "x"}]], ")"}], "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", "*", "x"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"sol4", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
        RowBox[{"4", "*", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
        RowBox[{"13", "*", 
         RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
       RowBox[{
        RowBox[{"(", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", "*", "x"}]], ")"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", "*", "x"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "3"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "3", "]"}], "\[Equal]", "4"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", "sol4"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "eq1", "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Pink", ",", 
        RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Dashed"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.878736544549183*^9, 3.878736730390996*^9}, {
  3.8790634682124863`*^9, 3.879063486799402*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"d50c4e9a-bd6d-4bc2-bfc6-272256282111"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"13", " ", 
    RowBox[{"y", "[", "x", "]"}]}], "-", 
   RowBox[{"4", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "x"}]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.8787366560300417`*^9, {3.8787367127004223`*^9, 3.8787367390616007`*^9}, {
   3.879063480968796*^9, 3.8790634872205057`*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"bc5f3d7c-8cc7-417c-8998-23a361e59b14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", 
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", 
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "36"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "x"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"6", " ", "x"}], "]"}]}], "+", 
        RowBox[{"6", " ", "x", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"6", " ", "x"}], "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8787366560300417`*^9, {3.8787367127004223`*^9, 3.8787367390616007`*^9}, {
   3.879063480968796*^9, 3.8790634872829814`*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"462b0a41-3b53-4d9d-9f78-69e7b59e0c0c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"36", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", "9", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", "9", "]"}]}]}], ")"}]}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "x"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"321", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Cos", "[", "9", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Cos", "[", "9", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "x"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"6", " ", "x"}], "]"}]}], "+", 
        RowBox[{"214", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "x"}], "]"}], " ", 
         RowBox[{"Sin", "[", "9", "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"3", " ", "x"}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"6", " ", "x"}], "]"}], " ", 
         RowBox[{"Sin", "[", "9", "]"}]}], "+", 
        RowBox[{"144", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "-", 
        RowBox[{"268", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Cos", "[", "9", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "+", 
        RowBox[{"18", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", "x", " ", 
         RowBox[{"Cos", "[", "9", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Cos", "[", "9", "]"}], " ", 
         RowBox[{"Cos", "[", "18", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "+", 
        RowBox[{"279", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Sin", "[", "9", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", "x", " ", 
         RowBox[{"Sin", "[", "9", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Cos", "[", "18", "]"}], " ", 
         RowBox[{"Sin", "[", "9", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Cos", "[", "9", "]"}], " ", 
         RowBox[{"Sin", "[", "18", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Sin", "[", "9", "]"}], " ", 
         RowBox[{"Sin", "[", "18", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Cos", "[", "9", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"6", " ", "x"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", "6"], " ", 
         RowBox[{"Sin", "[", "9", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "x"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"6", " ", "x"}], "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8787366560300417`*^9, {3.8787367127004223`*^9, 3.8787367390616007`*^9}, {
   3.879063480968796*^9, 3.8790634872829814`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"fedf2cda-53e0-4b39-8fc7-52ca173359fc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$5590#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {-29.66460317392965, 57.963022151508966`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           RowBox[{
             SuperscriptBox[
             "y", "\[Prime]\[Prime]", MultilineFunction -> None], "(", 
             TagBox["x", HoldForm], ")"}], "-", 
           RowBox[{"4", " ", 
             RowBox[{
               SuperscriptBox["y", "\[Prime]", MultilineFunction -> None], 
               "(", 
               TagBox["x", HoldForm], ")"}]}], "+", 
           RowBox[{"13", " ", 
             RowBox[{"y", "(", 
               TagBox["x", HoldForm], ")"}]}]}], "\[LongEqual]", 
         RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
              TagBox["x", HoldForm]}]], " ", 
           RowBox[{"cos", "(", 
             RowBox[{"3", " ", 
               TagBox["x", HoldForm]}], ")"}]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8787366560300417`*^9, {3.8787367127004223`*^9, 3.8787367390616007`*^9}, {
   3.879063480968796*^9, 3.8790634874391975`*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"c5f6f2a3-4269-4fc5-857f-e989986d9b8e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question 5 : ", "Section",
 CellChangeTimes->{
  3.878735809431036*^9, {3.8787367883459673`*^9, 
   3.87873680084816*^9}},ExpressionUUID->"7ace7eb7-39b5-495f-8ea8-\
eb97e8c9912e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
        RowBox[{"2", "*", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
        RowBox[{"5", "*", 
         RowBox[{"y", "[", "x", "]"}]}]}], "==", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.5", "*", "x"}]], "+", 
        RowBox[{"40", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"10", "*", "x"}], "]"}]}], "-", 
        RowBox[{"190", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"10", "*", "x"}], "]"}]}]}]}], "}"}], ",", 
     RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"sol5", " ", "=", " ", 
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
          RowBox[{"2", "*", 
           RowBox[{
            RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
          RowBox[{"5", "*", 
           RowBox[{"y", "[", "x", "]"}]}]}], "==", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"0.5", "*", "x"}]], "+", 
          RowBox[{"40", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"10", "*", "x"}], "]"}]}], "-", 
          RowBox[{"190", "*", 
           RowBox[{"Sin", "[", 
            RowBox[{"10", "*", "x"}], "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"y", "[", "4", "]"}], "\[Equal]", "2"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "2", "]"}], "\[Equal]", "3"}]}], "}"}], 
      ",", 
      RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "sol5"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "sol5"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "10"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "eq1", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Cyan", ",", 
          RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Dashed"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.878736802016635*^9, 3.878737023572979*^9}, {
  3.8787370578439665`*^9, 3.878737070727289*^9}, {3.8790634969868507`*^9, 
  3.879063509912582*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"b52543b1-6e98-485c-b4de-75362a9f5584"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "1.`"}], " ", "x"}]], " ", 
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2.`", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "1.`"}], " ", "x"}]], " ", 
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2.`", " ", "x"}], "]"}]}], "+", 
     RowBox[{"1.9999999999999998`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "1.`"}], " ", "x"}]], " ", 
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.08000000000000002`", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"1.5`", " ", "x"}]], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2.`", " ", "x"}], "]"}], "2"]}], "+", 
        RowBox[{"0.08000000000000002`", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"1.5`", " ", "x"}]], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2.`", " ", "x"}], "]"}], "2"]}], "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"1.`", " ", "x"}]], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"2.`", " ", "x"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"10.`", " ", "x"}], "]"}]}], "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"1.`", " ", "x"}]], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"2.`", " ", "x"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"10.`", " ", "x"}], "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8787369185288944`*^9, 3.8787369338289075`*^9}, {
   3.8787369946757946`*^9, 3.878737031013915*^9}, 3.8787370782881956`*^9, 
   3.879063516817384*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"0154f117-7f02-45fc-9372-ab827f8fc839"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{"1.9999999999999998`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "1.`"}], " ", "x"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "14.42162928583679`"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`", " ", "x"}], "]"}]}], "+", 
       RowBox[{"0.08000000000000002`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"1.5`", " ", "x"}]], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2.`", " ", "x"}], "]"}], "2"]}], "-", 
       RowBox[{"20.676333564992213`", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2.`", " ", "x"}], "]"}]}], "+", 
       RowBox[{"0.08000000000000002`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"1.5`", " ", "x"}]], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2.`", " ", "x"}], "]"}], "2"]}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"1.`", " ", "x"}]], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2.`", " ", "x"}], "]"}], "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"10.`", " ", "x"}], "]"}]}], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"1.`", " ", "x"}]], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2.`", " ", "x"}], "]"}], "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"10.`", " ", "x"}], "]"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8787369185288944`*^9, 3.8787369338289075`*^9}, {
   3.8787369946757946`*^9, 3.878737031013915*^9}, 3.8787370782881956`*^9, 
   3.8790635230502996`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"c760e73e-c1a4-4b7e-a5a9-26e5a819149b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3tpqSJCB////c6AbdlU7SEQG/h8jSTV+
       "]]},
     Annotation[#, "Charting`Private`Tag$14349#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{461.11111111111154`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-93.70595599417516, 168.1512970133744}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8787369185288944`*^9, 3.8787369338289075`*^9}, {
   3.8787369946757946`*^9, 3.878737031013915*^9}, 3.8787370782881956`*^9, 
   3.879063523128406*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"236aa33e-6808-40fd-bdbc-e05632af5e34"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 1], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAPPcvEat/4b9csGdCwBRFQNlx5TJ9
fuG/5MY+7yYRRUBxrYaAqV3hv8NjYmpgtERACeknztU84b/qdHPkrVdEQDlg
amku++C/W1kyHH+eQ0CZTu+f33fgv47SnybZLEJAs1byGYTi3r9UhQOYmZc+
QLTJGc4NyNq/ZQwEYIUqM0DkQFxpZobavw1nr7CGdTJAFLieBL9E2r/QO/mQ
28AxQHSmIztwwdm/twlpfZhYMEA1gy2o0rrYv7WDKHUvGitAtjxBgpet1r9j
Ip6sQSEgQLevaDYhk9K/2TIBvvQXAsD2SvhWrFLSvz99O6XZ3AbANOaHdzcS
0r+CpNLrQpcLwLIcp7hNkdG/ITgZG9F1EsCuieU6eo/Qv/JMkqbmhRvAScfE
fqYXzb8ho2goBT4mwMb947+8lsy/YYlBcHc+J8BENAMB0xXMv0xYQw9zOyjA
QKFBg/8Ty7+pSXBL4CoqwDZ7vodYEMm/6xmrTajeLcAkL7iQCgnFvxRe9yBL
SjLAomXX0SCIxL82S5b5Ma0ywCCc9hI3B8S/EWhInjQOM8AbCTWVYwXDv/oL
qmCOyjPAEuOxmbwBwb8Kvpr5rSw1wJAZ0drSgMC/KXOfCIuANcAaoOA30v+/
v8bdk6eO0jXAEXpdPCv8vb/t9bAlFXE2wP4tV0Xd9Lm/FVFMhIGYN8D6mpXH
CfO4vx/txivz3TfA9QfUSTbxt7/1AXB0qiE4wOzhUE6P7bW/b3Uv9P6jOMDZ
lUpXQeaxvyGS6ZrhlDnA1AKJ2W3ksL8a9M84IM05wKDfjrc0xa+/sGsRGNUD
OsCNk4jA5r2rv2Pjbj6+bDrA/FLty1WdpL89tmfDJRc7wF+JSao=
          "]], 
         LineBox[CompressedData["
1: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
a3d3xTDjI6Uvx/puVkVB1ajI27+MvnFW+335o4IZhzauvjtBwGmb2/xp7Srw
tXyef2aSQHfli6xV1Spgl15a6TWVxGDx82N1CSqILXbN7phOQm3z3VXLtVTA
b3KI/SZJ4rDrEtNgWRV87LUM+jWLxLlCsXHbMWUYcXXMJeRIjN1K2WH9VBkd
85WV5RRIXHxDKRy5xfB/hdIMzmwSx1qT1pSkK+NzlGiLHouERvq9d+ydyjiR
OV5mwiGx5eK/mZsYPTG5O3TJmkeizrL6Xf0yZXxt6j7uRJKIeXN33kYLZSR8
a9vpTpO4O2tyh56eMsxEXnt6M77BKffUFVDK6OLWWgWokbiW+cYmU0EZicYV
GiEajA9Jdpq/croyFjoXSx+YR0KCl93lJ6SM3q3XRuO0SbScrDToHqVxOjqn
7ZQuiaIp63xaBmng3JnqDH0SUhXhfOtvjF+8G5+fa8j0p2p9lW4XjZQX0adu
CkgsW5yddv4LDau+vWEP5pNQfnTk4vnPNAZEgjdULyBh7XpHR8B8P8Pzs3tu
yux3sv3T2k4a1gvW6raYkziRLFVL99IYdHZR/GxBolDQ5XD4O420APuJPksS
tdVOysdGaNjG4MvIIhJali4B/EkaQ+eMaoVsSSjNdkmKlFBGxj2tW9PtmH5J
bvLZybzf7iV1Rt6ehOFm8XFJWhnDfXMOcB1JKERxX9gbMHouKrVZ3YlExwfe
Ha1FynAgRJwMlpM46Hu2tsBVGSML/vLNnEloKvxMerVFGedX/mDZupDgzN/a
mxShjKXbuqYsdyPRZLZFaCBZGb9jWntWu5PY4zfN7/0NZSy7/7R4mxeTU3J/
26/tVMafl2WZoWtJCHXtfto1VQWX+u9ER64nkfSu6kI/pYJx4vzK0z4k0k4/
+rhskwquHA77XhJA4tnDlnO7GTy7Zf/35nEg836JQwd/UqoQfuD7sPE/Zp5q
2g7nHFXhPuB89MtOEjKuXWoeOaoQcZ2nJhlOwn/Zi+7fXmpYT31Y63mchH3B
4cdRw+q49V99hlU8iXUDH/ZoqmpApKz0g8ZJEkf02+Vl3TVwxTPb43cSCe7J
FXe3l2hgOMnX7XQ6CY/dyZy/0ZqIFfux9PlVEp0SnPdR0lp45/rpWNE1Eq/b
a75JQAvaF17WZtxg3h8UnP4vUAsvULQk4DaJYLsNJ0VrtcAO22sj8YDEzlY5
fccwbQTWBEQNlpCwa565TPyCNioU1z56W0pCOG2B/rs6bfjehuWlShKR+0PF
U1k6KOgTMV/0jESJx8qY8HwdTDEd3atZR6J05xmJrnoduMZ135dpIBF0uiye
HNDBH5Va4/YmEqumLB0c0NSF486S0CcvSVTtNjuya7EuzlVeK7r+mkTclx1X
Cr11Yb0ugR/eQiJwaKfwktO6SL4WucPnPYlv/CW5p/N10fM3+JZDK4Pn41GF
cZW6MLP3+WHwkdnf3keeequLE6muekodJAq463W9enXR3mkbJPyZxPZehT7B
uC4MBcbXu7+Q+LhzWrObqB5iDmn0P+8kUTk5V69jph6jh0paxd0kvu8sLrgn
rwdNQnJrZi+Db+5Kx3YlPYQHTuRF95GYFNshcCX00Fgy0B0wwOjD1bS2OSp6
oGa0q7kMkhD/p/ZnnoYedq5u8jUdIrHr8/SweC09PMmtvEgNkyhXD4u31tWD
0sjtLxIjjN4pHbriqK+HAOuL9I9REps+xe7JM9BDaWKyd/MYif63+d1ehnqQ
6TicXfaXROwfgtzC1D66e9ovTZBoaPKJbWR+XxTuzzsxSeLDWEDZaWY/8TrP
tbuEmZyWeyf7AXOeh9LSDK+pFPJCYW2jrYd8v4UfFolQmNUTPizQ1MNkkS5r
nhgF4gM1/6SqHgzSR6rFJSiUrwnz3E4x50U+/K9zOoVqqbPaTzl6SPaNYlVJ
Mrlvw4WT6XP0UOPg8Dh7FoXmsjdnvsvq4Y+e7PYIaQpfa9SiH0vqQUuxhbVG
lsn5dm8eqjD9T2j33T5HkcL63bY83nddVFZrs0dmU9gTUBO/+KMuhq8MP345
l8nxD0Vlcht04b7rIDueQ6EtMaSDf1UXxPTMJyIqzP1SVzSXeOnC+btP8GdV
Cv/Z23yuY/AV9Woep0KdgnSxkWCbgS66M+8F79OikNC5rPOEqC4KDF9zfhoy
Ob+tReTGVR1gjeTOdisK2/wUORuHtRFs9ZJbak2hKcFS1qFNGxfUzj5Ns6Xg
SJYvP1qjDfEhNd4qewoV4ck3bTK1YfJ24CnfkcKdE1OmNcdpI6Dkzk5ZJwq7
b9weHdqljcaYRc/qV1CYNzi0+scybUwJmL7r6koKt1vfp3wz1wZ/RRMvzpXC
uQNCs9K1tJHKWrfLejWFn2sj6uwltfFMSJWgPCnMMSkXWzuhhfGvfc8mvSgI
ZPpXr/iuhfUFYcSD9RTiA7/KT77WQuJpy9pUbwo1OlFU3TMtVIWJh4T4MPOd
uuFIZrkWRtY9J1x8KTwOKa3bX6wFdZvkWn0/ColxB6R33dCCh+aaECkmlxe4
+RFxl7VwTEqZ7N9KYemsIL/K81ooHe6tfbaNOU/d8qdaphYGW26GXA6iEJX/
bnP5WS1QZbvJmO0UTnjaiCWmasHlgkXdxh0U49P3XDmfooWYONFQy10UNi30
Lh9l6ruB9SQvlMKhbBHH5DNa6F2ZVDe+m8LVR02fDqYz+rXAM/RdGPPerllX
K7K04MSlqLv7KNTvCfVwu6SFA1N76k7vp/DNdYRvfU0LU6xNZqQfoKDTt3Cz
c5EWoqOOLjl/kEJKT6nhBPN+8eoPhy9HUbBZYTRqW6/F5Aidx9djKMQsu7dV
/70WJG0jpt2JpbBFVPjyw14tnIhptHpwhELavQlu318tSD8hIyuOMfyJvnKu
ZJY2TontKHtygkJQAeWqQ2tD0a5qoj6Bwtnk348tFjDzjFUwe5XI4OdffcvA
cm2kS9y9255MYWrxRQelaG1w7SVGO1OZ+ijlFJ+tjewjHoL+sxRmhsSZnirT
xqUZEzfHMik4fejwNBDSgbqj0+BkFoXvol7OFZQOrh47pyOaQ4Gfcb/ssS2j
1zOtrsrmMvyhrTQUT+ngvtThC/NuUKhVjy5vNGX0c3nzJ/2bFBZNEorkFl2U
JWiQxrcp/DVv35aeoosqmboM62IKfdMaeF9HdVEvJ5OypozCEwcFWV1vPSx3
8X69sYLCleniD17t08OLpNty/o8omIj5Vb9P0cMbBbeEkCcUPg5tfDDYoIf2
2Wlx8c8pqHZsP+ANfQyzVPZVfPw//jRbIjUMEOIVcv9JB8PnZfzsTFsDjKU/
+V3/mcHDlYLxzI0G+Mfx3/Wui8LAmyt5mhkGECNuBP78TkH91b2qUzMNoaS8
YIOKEI1bd4LOmrUawvpM9Kj4FBriK3Iqw38aYtusF8f7ptL4JUPMsZbgo/y3
//3bTA5lLczxdDLko3db8fIUCRpGhQqP4xbzIfd5alfYDBoK+udXL/Dkw7c+
Xc5KivFV5ydlOw/wkWDVk6ciQ2Nhw1LbD4l83CsWQEKOxotwTrnxBT4kzzcE
NCrSeCmVOzqnmg+j2ayphXNoTN9wIyzlFR/rjm0+k6JEY/JrXuP2z3zcChF6
vJZLw/x9/aT+JB8fvjl6WRE0Lnkt3iEvKYDIhjNDKhSTmzMPfXeYI4DOm6+x
Eso0TG+7rX5LC+DuYMDrV6GxbVLsJeMAcbB8/51GNRonNbJKOo0FuCqodSjU
oJF3lCzcYiXAP57P7r3aNILso/duWimA+umCWet0aew2Vipt8xBgxfSJC1b6
NPSH3vy8skGAsIglpqqGNGZL/R58tlmAC8OnmyQENDy98cRimwANWz5t7jei
Ee14tnp6sACjbTr/Go1pPCrNCdUOEYBw2ZtUaEKDN0flYt4eAeyfPtFMNaPx
YcaOFZH7BNi5UL5i70IaMk8f3C/aL0DG7fWr1oHG3yyL1Y4HBHisfq3fyopG
/vZdbdaRAgxmjB1StaZBUyx+DlMrydkqTbelYXPQYK8/Uy+KTSzoX0xjtKd3
eiazPmCizbZpCY3h0dAgywgBkoPntRY60Ih4+9rPPVyA8q7QHalLmXns3dvT
GSZAj1eVxL5lNMpt/sr/CBVA9oV01roVNL4cSVy4d6cAZovXGC1aSaM56nJX
3H8C+Jbk1am6MnhQNy8lAwSI1x/xnr6KhtkOu7TFTL8+seLjmzxorH/qdGaF
lwCSJ9+r3PGiEV6UYQg3AQSi6iWpa2l4LPJ91LRMgNjB8u513jQ+SugsGLZk
5l09ZDmwhcZVlT927yhm3iYWzU1baeZemmsOKQkQeeNo4J1tNK6EjZCTMgK8
OqOctm87DcmDNuaxQgLsDXQbnr6HxpOYI7OSP/BBGPnUqO6lsaBmxGXfCz6q
JranW4XTyEx2+rW1ho9Zx49bh0UyfHAv+3S0kI/bLmlzkg/RuP8qc1vDFT7c
2Xl9N6OZ9VKzHi/M5uP81aqknjgGf27/iutO8LF4xws/kWM0OiLKp41H89Fn
0m5GnqBxvqcrfF84w58pA9LmCTT+SP265baLD8Gzv1/cE2n8eCsidWobH+9O
StzbmURDV1/39QJfPvavnn08IZlGp1I3e+U6PmhSZUN+Ko05Zw43dLrzUdNt
IKg5S+Mx8fbcuDMf2wog8SWdRsbofen0pXzI7nZqncykMevvj811dnwUW3jd
ZGXTeDV/4EaSNR9eYv7R83NopBY8uf0XfAg/D1298iKNpEv242IL+biUHK0d
lEuDnU/Vl5nyYb/2lPDRPIZfD2hKw4SP7yrZry9dpREbcSt/yQI+kvqv51Ve
Y/g54NikytTGd0rC227QmG/Hv1jN1K37nq34c5PG+4gFfZrMfgetm1UUC2l8
Hc9X9DTnQ02yc0y/iMb+88EWHsx96l7+rF96l8aRPhNNLea+29OEz2+5T0O9
t8PyFfMexY1SIdElNGKeDSe7OvHxQJNjn13K5L6stW23XPhYP6TJfVjO4G/A
7L8BRs9E7hsPNVcyehT5wXa6Dx9XIm0fD1fR+D3l44QY0/9lS1zOSj9h7nct
rqk7hI9hae9Arac0WrzNM69F8mGeFa7oU09DuKvi1pczfHzafLQ34jmNdf7r
mtxy+YjRPVOa1kRDkVOYnH+Hj8bSQt+Xr2lk10dl/WP0b1dMpcn3tzTSt/x7
MPqVDyWnxlkz3tFwTDym3TDKh0/rtyKrNhozlTTuinMZbb04dmRtO5OLZfaV
+hoIcD1AbF3YJ4YPRbK/Ty9m9OYvJXaLybkFsrck3Rl+HlHyWEUyufavUP2e
7jcC6H7aPM/8Bw3nRTHOy38w/MjbNen+k8abP2uUNkgagbvgZG4Ck8tFOv4W
brQ2wiOhc3vzxxg8yyoI2W0wgl9N/rKavzSCT73Wu7/fCJIJ9+kvE4ye3Fnb
eyvdCDdX1YxOMjk5YqlNquYDI/wPitKMRQ==
          "]], 
         LineBox[{{-1.9141927450632659`, -27.090419972248345`}, \
{-1.9116708715318884`, -25.240974132943048`}, {-1.8822279103418378`, \
-4.459629720529641}, {-1.8785475401930816`, -1.9407388656408795`}, \
{-1.8748671700443251`, 0.5601897949290262}, {-1.8675064297468125`, 
          5.507631615132054}, {-1.8527849491517872`, 
          15.181259564319273`}, {-1.8233419879617365`, 
          33.61670472356229}, {-1.8196616178129803`, 
          35.83351972024193}, {-1.8159812476642239`, 
          38.03053582268497}, {-1.80896474582902, 42.16211729109702}}]}, 
        Annotation[#, "Charting`Private`Tag$14396#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 10}, {-27.090419972248345`, 42.16211729109702}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           RowBox[{
             SuperscriptBox[
             "y", "\[Prime]\[Prime]", MultilineFunction -> None], "(", 
             TagBox["x", HoldForm], ")"}], "-", 
           RowBox[{"4", " ", 
             RowBox[{
               SuperscriptBox["y", "\[Prime]", MultilineFunction -> None], 
               "(", 
               TagBox["x", HoldForm], ")"}]}], "+", 
           RowBox[{"13", " ", 
             RowBox[{"y", "(", 
               TagBox["x", HoldForm], ")"}]}]}], "\[LongEqual]", 
         RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
              TagBox["x", HoldForm]}]], " ", 
           RowBox[{"cos", "(", 
             RowBox[{"3", " ", 
               TagBox["x", HoldForm]}], ")"}]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 1, 1], Editable -> False, Selectable -> False], 
                 ",", 
                 RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8787369185288944`*^9, 3.8787369338289075`*^9}, {
   3.8787369946757946`*^9, 3.878737031013915*^9}, 3.8787370782881956`*^9, 
   3.8790635232690372`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"a30ccf82-9b68-4fea-910c-9e912db479f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"eq1", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "+", " ", "x"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"sol4", " ", "=", " ", 
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "''"}], "[", "x", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"y", "[", "x", "]"}], "+", " ", "x"}]}], ",", 
        RowBox[{
         RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], 
      ",", 
      RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "sol4"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "eq1", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Pink", ",", 
          RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Dashed"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8790635347729855`*^9, {3.901753424138462*^9, 3.9017534727713013`*^9}, {
   3.9017535600484095`*^9, 3.9017537056405587`*^9}, {3.9017538464247355`*^9, 
   3.9017538667891026`*^9}, {3.9017575789141912`*^9, 3.9017576106383204`*^9}},
 NumberMarks->False,
 CellLabel->"In[10]:=",ExpressionUUID->"ef4e5c89-af75-41c4-b71e-239376f75f90"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["y", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "x", "]"}], "\[Equal]", 
  RowBox[{"x", "+", 
   RowBox[{"y", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.9017536175297785`*^9, 3.9017536474270353`*^9}, {
  3.9017536981805167`*^9, 3.9017537058865767`*^9}, {3.90175386157353*^9, 
  3.9017538675227833`*^9}, {3.9017575914891624`*^9, 3.901757611252201*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"13d0ea1e-cff5-4145-8c21-0f606384f7a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "x"}]], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], ")"}]}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9017536175297785`*^9, 3.9017536474270353`*^9}, {
  3.9017536981805167`*^9, 3.9017537058865767`*^9}, {3.90175386157353*^9, 
  3.9017538675227833`*^9}, {3.9017575914891624`*^9, 3.901757611257187*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"cf8df301-236d-4a97-9f6d-367dd5ba9c5d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$3242#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {0., 9455.012413841001}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           SuperscriptBox["y", "\[Prime]\[Prime]", MultilineFunction -> None],
            "(", 
           TagBox["x", HoldForm], ")"}], "\[LongEqual]", 
         RowBox[{
           RowBox[{"y", "(", 
             TagBox["x", HoldForm], ")"}], "+", 
           TagBox["x", HoldForm]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9017536175297785`*^9, 3.9017536474270353`*^9}, {
  3.9017536981805167`*^9, 3.9017537058865767`*^9}, {3.90175386157353*^9, 
  3.9017538675227833`*^9}, {3.9017575914891624`*^9, 3.9017576113497353`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"893d85ec-0680-49f0-9070-cc0bef6e4b60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"y", "[", "x", "]"}], "+", " ", "x"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9017534966643977`*^9, 3.9017534973412766`*^9}, {
  3.9017535356927814`*^9, 3.901753537691226*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"c20a1724-005c-4152-928f-d79432b660b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "x"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], " ", 
      TemplateBox[{"2"},
       "C"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9017534984221907`*^9, 3.901753538525262*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"b913c3e3-7f2e-43ae-a4ad-24550e2e58b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"sol4", " ", "=", " ", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"y", "[", "x", "]"}], "+", " ", "x"}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.901757637622491*^9, 3.9017576380604076`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"1c0b598e-3849-44f4-8db1-6a649cd48775"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "x"}]], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], ")"}]}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.901757638543935*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"bb3aa3c8-d2bf-4b87-964f-24e5049f88a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"sol4", " ", "=", " ", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"y", "[", "x", "]"}]}], "-", "1"}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9017583508698754`*^9, 3.9017583862934713`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"0d6f589d-04aa-49d8-bd73-662f6500d477"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.901758386846121*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"16572bb5-c6b8-4f3e-8706-ba69b784acdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "*", 
          RowBox[{
           RowBox[{"y", "'"}], "[", "x", "]"}]}], "-", 
         RowBox[{"y", "[", "x", "]"}]}], ")"}], "/", "2"}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9017606716653957`*^9, 3.9017606723068085`*^9}, {
  3.9017607170598636`*^9, 3.9017607381834903`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"463039ff-4ca7-4f3c-8638-ad1ff41179f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["5", "4"], "-", 
          FractionBox[
           SqrtBox["17"], "4"]}], ")"}], " ", "x"}]], " ", 
      TemplateBox[{"1"},
       "C"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["5", "4"], "+", 
          FractionBox[
           SqrtBox["17"], "4"]}], ")"}], " ", "x"}]], " ", 
      TemplateBox[{"2"},
       "C"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.901760739643118*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"637a81ea-d1bd-4861-9670-0e14868c9181"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"sol4", " ", "=", " ", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5", "*", 
            RowBox[{
             RowBox[{"y", "'"}], "[", "x", "]"}]}], "-", 
           RowBox[{"y", "[", "x", "]"}]}], ")"}], "/", "2"}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "3", "]"}], "\[Equal]", "6"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "3", "]"}], "\[Equal]", 
        RowBox[{"-", "1"}]}]}], "}"}], ",", 
     RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9017607528696613`*^9, 3.901760788113038*^9}, {
  3.9017609152219315`*^9, 3.9017609519548693`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"739f8dc0-c990-411d-89a9-e74e40010f72"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","deqn",
   "\"Equation or list of equations expected instead of \
\\!\\(\\*RowBox[{\\\"True\\\"}]\\) in the first argument \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{SuperscriptBox[\\\"y\\\", \
\\\"\[Prime]\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
\\\"x\\\", \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{FractionBox[\\\"1\\\", \
\\\"2\\\"], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", RowBox[{\
\\\"y\\\", \\\"[\\\", \\\"x\\\", \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"5\\\", \
\\\" \\\", RowBox[{SuperscriptBox[\\\"y\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"x\\\", \\\"]\\\"}]}]}], \
\\\")\\\"}]}]}], \\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\"}], \
\\\"}\\\"}]\\).\"",2,5,6,24589504866617837500,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.901760790122899*^9, 3.9017608560155363`*^9, 
  3.901760920242334*^9, 3.901760952176714*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"d03bc10f-3302-485a-aafd-b80c298f0ba2"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["y", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"y", "[", "x", "]"}]}], "+", 
         RowBox[{"5", " ", 
          RowBox[{
           SuperscriptBox["y", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}]}], ")"}]}]}], ",", 
     "True", ",", "True"}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.9017607902539663`*^9, 3.9017608560535593`*^9, 
  3.9017609202653036`*^9, 3.90176095219765*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"ec73758d-ef00-4dde-92c0-704dbf5dafbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"1", "+", 
         SuperscriptBox["x", "2"]}]], "+", 
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{"Sin", "[", "x", "]"}], ")"}], "*", 
        SqrtBox["x"]}]}]}], "}"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.902355007734261*^9, 
  3.9023551080442224`*^9}},ExpressionUUID->"3595e3c9-b833-47b5-bfe4-\
41aee31f3d9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{"ArcTan", "[", "x", "]"}]}], "+", 
     TemplateBox[{"1"},
      "C"], "+", 
     RowBox[{"x", " ", 
      TemplateBox[{"2"},
       "C"]}], "-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
       SqrtBox["x"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}], ")"}], 
           RowBox[{"3", "/", "2"}]]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], " ", 
          SqrtBox["\[Pi]"], " ", 
          RowBox[{"Erf", "[", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], "]"}]}]}], ")"}]}], 
      RowBox[{"8", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]]}]], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], " ", 
       SqrtBox["x"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], " ", 
          SqrtBox[
           RowBox[{"\[ImaginaryI]", " ", "x"}]]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[ImaginaryI]", " ", "x"}], ")"}], 
           RowBox[{"3", "/", "2"}]]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
          SqrtBox["\[Pi]"], " ", 
          RowBox[{"Erf", "[", 
           SqrtBox[
            RowBox[{"\[ImaginaryI]", " ", "x"}]], "]"}]}]}], ")"}]}], 
      RowBox[{"8", " ", 
       SqrtBox[
        RowBox[{"\[ImaginaryI]", " ", "x"}]]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         FractionBox["3", "2"], ",", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         FractionBox["3", "2"], ",", 
         RowBox[{"\[ImaginaryI]", " ", "x"}]}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"\[ImaginaryI]", " ", "x"}]]}]], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.902355105573124*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"db6a113d-2d64-4bbb-92b6-f6ed8e59c5cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"sol4", " ", "=", " ", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "\[Equal]", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}]], "+", 
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{"Sin", "[", "x", "]"}], ")"}], "*", 
          SqrtBox["x"]}]}]}], ",", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
        RowBox[{"-", "2"}]}]}], "}"}], ",", 
     RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.902355491893856*^9, 3.902355511105359*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"f5302a39-d0fd-4fcd-bd1c-c1c9397a240e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"8", " ", 
       SqrtBox[
        RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
       SqrtBox["x"]}]], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "\[ImaginaryI]", " ", 
         SqrtBox[
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", "x"}], "+", 
        RowBox[{"6", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox[
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", "x"}], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], " ", 
         SqrtBox[
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", "x"}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox[
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SuperscriptBox["x", 
          RowBox[{"3", "/", "2"}]]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox[
          RowBox[{"2", " ", "\[Pi]"}]], " ", 
         SqrtBox[
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SuperscriptBox["x", 
          RowBox[{"3", "/", "2"}]]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["x", "2"]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox[
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SuperscriptBox["x", 
          RowBox[{"3", "/", "2"}]], " ", 
         RowBox[{"ArcTan", "[", "x", "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], " ", 
         SqrtBox[
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         RowBox[{"Erf", "[", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x"}]], "]"}]}], "+", 
        RowBox[{"3", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox["\[Pi]"], " ", "x", " ", 
         RowBox[{"Erf", "[", 
          SqrtBox[
           RowBox[{"\[ImaginaryI]", " ", "x"}]], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["x", "2"], " ", 
         RowBox[{"Erf", "[", 
          SqrtBox[
           RowBox[{"\[ImaginaryI]", " ", "x"}]], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox["\[Pi]"], " ", 
         SuperscriptBox["x", "2"], " ", 
         RowBox[{"Erfi", "[", 
          SqrtBox[
           RowBox[{"\[ImaginaryI]", " ", "x"}]], "]"}]}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox[
          RowBox[{"\[ImaginaryI]", " ", "x"}]], " ", 
         SqrtBox["x"], " ", 
         RowBox[{"Log", "[", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9023555159225693`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"8f0c1e89-61d2-4a79-9cfb-203603965020"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", "sol4"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "eq1", "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Pink", ",", 
         RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"GridLinesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Dashed"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9023555473138733`*^9, 3.902355547637351*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"8eb42adf-9906-4f05-b2a3-e265c2bc2ac8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1:eJwVl3k8VO8Xx+3LjBhDvmWZGUuWiAqVqOeJKFuFLCmSkD0pRUlFyZI1WxSV
JYlKGyL3WgpZI5IkobGXZcbcmbH87u+fmdf79dzlOZ/zOeeeR9H9rK0nHw8P
D8R//v/Pl+bU60ZTAbXz/7Zr0/SQxh6alSPNB/gSu9K95cKQtU+1UTRaGGg2
PfifiUws8gBNoArSYoHADc9oc7F7iP+ekAAW9R64SPP3v4IVIz1c77Q56lMw
4ld2cqirEhH+MaI2S60CQdfYs/tuNCOPPuedm6a2gArxX8Iiw9+Q5y9if/hr
D4DsbVY6R3zHkTPgy72Z4FGQvbswjeA4h/A8Xnr/I34UOEUZttadmUOyBOQH
PxeMAoUk7t2A0DmkucWL8rRvFMx0Sn55fG8OUT+6/Nhz9xgI3N5QGvVjDpnw
Visd4v0DHjCYV+Rd5hHf1Ku1Xcl0kIiO3MlwXED4mI9/IU/poGjofdqA1wKS
7djM86KeDqoXpHrIFxeQz/JSJgkMOjjz2mD8ZNoCovmkuMncaRwcF/bf4N+1
gMxU93TVUyfACw+eOXOzRSTwj8bom+eTAEn5kiKowUCGXb+L1LVMAv0Gq/uM
nQzErj9Gu31sErTP3LLpNWMgu1rHw/7ITgHVE5HP/DwYCH95IUnm9hS40X2k
eDqXgWSFK+69dHIaaJgfkNKXZCJ1UhvvGZBmgfEe/jedU0xEL6G51lRzFoQ+
rO2fZjGRIqHQMRuzWVBy+DuFLbCE3GH36fiGz4KtR9JW6JQlxOFX2qfsiVnQ
olsVK2G7hEyVkBhc9C/Y/OzEatLbJYSgeFPt1645cKdNwkTnHAtpNkrRiTCd
A5J1Xl+fXGEh0U65OxVs50D5xKclcjQL4UuuPHDcbw4YdWsOo9kshLM6c+bb
gzlwP8h5+HIDC5ketC/u5JsHn/g8Aj3IGNKWpaaBts2D3w0xRYxCDIl7o7ft
5Pd5wCwOca98jiEHu/YZrP6ZB/spAnsCKzCkUfiEudHaPLCU4oMvmzGk5mKy
T+W2BYCsInIJUxhSdpT99GXGApgPrFJ8oslGEkmtmx+5LYLLqUdj9uezkaqd
Cm8PBS6Cf38ZfwZK2MiY61mwfGURHMm+f9HtFRsxLJM66pi5CGqaYmgGdWxk
wvzE1XUdi8AkxUWFNsRGTKJmO8MMGUBufYJnnTQHCSwBzmrmDDAsVbvOXI6D
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
          "]]}, Annotation[#, "Charting`Private`Tag$5720#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-3.4176956283638513`, 1.6046082899589449`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"eq1"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                  False], ",", 
                 RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9023555521370516`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b2ebf860-cf89-4ad8-87b5-efab39b87909"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.3 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 126, "Title",ExpressionUUID->"28b35855-af2a-432a-a7bf-12be2f89a972"],
Cell[743, 27, 225, 6, 109, "Subtitle",ExpressionUUID->"61ea5dca-0b9b-4354-b335-800fd8790f63"],
Cell[971, 35, 172, 3, 84, "Section",ExpressionUUID->"da3c6fb1-65d2-4de6-bc87-d83f1204aa3a"],
Cell[CellGroupData[{
Cell[1168, 42, 330, 5, 65, "Section",ExpressionUUID->"e5635c97-6603-4597-ae48-3df09f3466e5"],
Cell[CellGroupData[{
Cell[1523, 51, 2329, 67, 138, "Input",ExpressionUUID->"a5c918ec-99ab-4dcc-8b62-07ae9a1d4a0e"],
Cell[3855, 120, 605, 15, 43, "Output",ExpressionUUID->"ac69669f-2452-4708-ad6b-5b9b4b3d0aae"],
Cell[4463, 137, 689, 20, 48, "Output",ExpressionUUID->"6abfff9f-a7e4-422e-9911-21c99e0bb35f"],
Cell[5155, 159, 1111, 30, 71, "Output",ExpressionUUID->"6917f070-6c98-4f74-b98f-ad28777c3759"],
Cell[6269, 191, 35464, 630, 304, "Output",ExpressionUUID->"59ebdc5e-e334-4988-8966-4c21b3229771"]
}, Open  ]],
Cell[41748, 824, 149, 3, 63, "Input",ExpressionUUID->"9763497e-932f-45f8-bb3f-400f7a730952"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41934, 832, 234, 4, 84, "Section",ExpressionUUID->"9d1f44d2-d481-4951-9d91-69adf23b4dc9"],
Cell[CellGroupData[{
Cell[42193, 840, 2510, 72, 138, "Input",ExpressionUUID->"477987d2-bd10-4e4e-810e-4d9e3af7a519"],
Cell[44706, 914, 593, 16, 43, "Output",ExpressionUUID->"58eb04d9-4053-46f6-aceb-896556669963"],
Cell[45302, 932, 947, 31, 61, "Output",ExpressionUUID->"5a280966-8b9a-4cf0-92b0-ef8f9e1df195"],
Cell[46252, 965, 2514, 66, 110, "Output",ExpressionUUID->"c5549832-2153-454f-a139-18e88bf3a2d2"],
Cell[48769, 1033, 21513, 403, 310, "Output",ExpressionUUID->"ed16aa78-69e6-4d3d-b45e-0e3d60172199"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70331, 1442, 231, 4, 84, "Section",ExpressionUUID->"d25481be-82bc-4101-bffb-f70831407ea3"],
Cell[CellGroupData[{
Cell[70587, 1450, 2908, 85, 174, "Input",ExpressionUUID->"e163cf6f-e69d-46e1-a305-7c867becc6fc"],
Cell[73498, 1537, 620, 17, 43, "Output",ExpressionUUID->"9befd9ae-69ca-4f92-89d5-658876e39fe8"],
Cell[74121, 1556, 694, 21, 65, "Output",ExpressionUUID->"1c050de5-a155-46d1-b952-78704521d8e7"],
Cell[74818, 1579, 1725, 48, 78, "Output",ExpressionUUID->"42c3da87-a5ac-497d-b790-a1551535a04f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76580, 1632, 152, 3, 37, "Input",ExpressionUUID->"616acb6e-3080-4240-b47a-79044be137c4"],
Cell[76735, 1637, 33655, 602, 299, "Output",ExpressionUUID->"66bd5182-f560-4b29-afc4-154a786cdf9a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110439, 2245, 828, 24, 84, "Section",ExpressionUUID->"f8ace0a3-f743-4d12-bb64-b9f4f3e4efc1"],
Cell[CellGroupData[{
Cell[111292, 2273, 2977, 87, 153, "Input",ExpressionUUID->"d50c4e9a-bd6d-4bc2-bfc6-272256282111"],
Cell[114272, 2362, 735, 20, 43, "Output",ExpressionUUID->"bc5f3d7c-8cc7-417c-8998-23a361e59b14"],
Cell[115010, 2384, 1437, 43, 61, "Output",ExpressionUUID->"462b0a41-3b53-4d9d-9f78-69e7b59e0c0c"],
Cell[116450, 2429, 4382, 110, 130, "Output",ExpressionUUID->"fedf2cda-53e0-4b39-8fc7-52ca173359fc"],
Cell[120835, 2541, 21175, 400, 320, "Output",ExpressionUUID->"c5f6f2a3-4269-4fc5-857f-e989986d9b8e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[142059, 2947, 185, 4, 84, "Section",ExpressionUUID->"7ace7eb7-39b5-495f-8ea8-eb97e8c9912e"],
Cell[CellGroupData[{
Cell[142269, 2955, 3192, 89, 174, "Input",ExpressionUUID->"b52543b1-6e98-485c-b4de-75362a9f5584"],
Cell[145464, 3046, 2225, 60, 78, "Output",ExpressionUUID->"0154f117-7f02-45fc-9372-ab827f8fc839"],
Cell[147692, 3108, 1937, 50, 78, "Output",ExpressionUUID->"c760e73e-c1a4-4b7e-a5a9-26e5a819149b"],
Cell[149632, 3160, 17548, 307, 394, "Output",ExpressionUUID->"236aa33e-6808-40fd-bdbc-e05632af5e34"],
Cell[167183, 3469, 44444, 782, 320, "Output",ExpressionUUID->"a30ccf82-9b68-4fea-910c-9e912db479f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211664, 4256, 2052, 55, 138, "Input",ExpressionUUID->"ef4e5c89-af75-41c4-b71e-239376f75f90"],
Cell[213719, 4313, 506, 10, 43, "Output",ExpressionUUID->"13d0ea1e-cff5-4145-8c21-0f606384f7a3"],
Cell[214228, 4325, 755, 19, 48, "Output",ExpressionUUID->"cf8df301-236d-4a97-9f6d-367dd5ba9c5d"],
Cell[214986, 4346, 15697, 305, 315, "Output",ExpressionUUID->"893d85ec-0680-49f0-9070-cc0bef6e4b60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230720, 4656, 537, 13, 63, "Input",ExpressionUUID->"c20a1724-005c-4152-928f-d79432b660b5"],
Cell[231260, 4671, 560, 17, 43, "Output",ExpressionUUID->"b913c3e3-7f2e-43ae-a4ad-24550e2e58b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231857, 4693, 735, 19, 63, "Input",ExpressionUUID->"1c0b598e-3849-44f4-8db1-6a649cd48775"],
Cell[232595, 4714, 576, 17, 48, "Output",ExpressionUUID->"bb3aa3c8-d2bf-4b87-964f-24e5049f88a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233208, 4736, 758, 20, 63, "Input",ExpressionUUID->"0d6f589d-04aa-49d8-bd73-662f6500d477"],
Cell[233969, 4758, 376, 10, 43, "Output",ExpressionUUID->"16572bb5-c6b8-4f3e-8706-ba69b784acdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234382, 4773, 686, 18, 63, "Input",ExpressionUUID->"463039ff-4ca7-4f3c-8638-ad1ff41179f1"],
Cell[235071, 4793, 816, 27, 74, "Output",ExpressionUUID->"637a81ea-d1bd-4861-9670-0e14868c9181"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235924, 4825, 968, 26, 63, "Input",ExpressionUUID->"739f8dc0-c990-411d-89a9-e74e40010f72"],
Cell[236895, 4853, 1072, 19, 47, "Message",ExpressionUUID->"d03bc10f-3302-485a-aafd-b80c298f0ba2"],
Cell[237970, 4874, 843, 23, 61, "Output",ExpressionUUID->"ec73758d-ef00-4dde-92c0-704dbf5dafbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238850, 4902, 634, 20, 84, "Input",ExpressionUUID->"3595e3c9-b833-47b5-bfe4-41aee31f3d9d"],
Cell[239487, 4924, 3301, 101, 156, "Output",ExpressionUUID->"db6a113d-2d64-4bbb-92b6-f6ed8e59c5cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242825, 5030, 933, 26, 83, "Input",ExpressionUUID->"f5302a39-d0fd-4fcd-bd1c-c1c9397a240e"],
Cell[243761, 5058, 4209, 111, 109, "Output",ExpressionUUID->"8f0c1e89-61d2-4a79-9cfb-203603965020"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248007, 5174, 1012, 25, 88, "Input",ExpressionUUID->"8eb42adf-9906-4f05-b2a3-e265c2bc2ac8"],
Cell[249022, 5201, 20527, 380, 357, "Output",ExpressionUUID->"b2ebf860-cf89-4ad8-87b5-efab39b87909"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

