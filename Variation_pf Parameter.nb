(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    266941,       5170]
NotebookOptionsPosition[    262078,       5086]
NotebookOutlinePosition[    262450,       5102]
CellTagsIndexPosition[    262407,       5099]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Practical - 4", "Title",
 CellChangeTimes->{{3.878874622994547*^9, 
  3.87887465658688*^9}},ExpressionUUID->"9a9db8ae-f3f4-476b-b6ae-\
8f5f6696f16f"],

Cell["To solve differential equation using variation of parameter", "Subtitle",
 CellChangeTimes->{{3.878874662983082*^9, 
  3.878874695407585*^9}},ExpressionUUID->"1b3e810c-1c48-4827-ae93-\
65ff0271f3fe"],

Cell["", "Section",
 CellChangeTimes->{{3.8788746974847794`*^9, 3.878874745249821*^9}, 
   3.8790644760579233`*^9},ExpressionUUID->"36544ee9-9322-46cf-98fb-\
ec7f04e7ff87"],

Cell[CellGroupData[{

Cell[TextData[{
 "Question -1: ",
 StyleBox["y\[CloseCurlyQuote]\[CloseCurlyQuote](x)+ y = sec(x)", "Section"],
 "   (Solving without any program)"
}], "Section",
 CellChangeTimes->{{3.8788747470115623`*^9, 3.878874770260707*^9}, {
  3.8788749005612063`*^9, 3.878874915579692*^9}, {3.879136882459184*^9, 
  3.8791368834120855`*^9}, {3.8791371990233665`*^9, 
  3.879137203968927*^9}},ExpressionUUID->"ab310cf9-5206-45a6-95b5-\
99c449e927b1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
      RowBox[{"y", "[", "x", "]"}]}], " ", "\[Equal]", "0"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"y1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"sol", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"y2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"sol", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "1"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"w", "=", 
  RowBox[{"Wronskian", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"y1", ",", "y2"}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"v1", "=", 
  RowBox[{"-", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"y2", "*", 
       RowBox[{"Sec", "[", "x", "]"}]}], "w"], ",", "x"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"v2", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"y1", "*", 
      RowBox[{"Sec", "[", "x", "]"}]}], "w"], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pi", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"v1", "*", "y1"}], "+", 
     RowBox[{"v2", "*", "y2"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y1", ",", "y2"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3"}], ",", "3"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"y1", ",", "y2"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "Dashed"}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.878874771706914*^9, 3.878874828622594*^9}, 
   3.879136473556719*^9, {3.8791368432061243`*^9, 3.8791368775145082`*^9}, {
   3.879137212620616*^9, 3.879137222585827*^9}, {3.879138000390253*^9, 
   3.8791380358899493`*^9}, {3.879138091666576*^9, 3.8791381178969374`*^9}, 
   3.8791383809467306`*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"381d0d54-308c-4d02-a96a-2cc5e6f02bba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8788747833057766`*^9, 3.8788748149034615`*^9}, 
   3.8788748942245865`*^9, 3.8788749472613497`*^9, 3.8791364841083336`*^9, 
   3.8791367834863873`*^9, {3.879136857327092*^9, 3.879136878014165*^9}, {
   3.8791369393617535`*^9, 3.879136939752268*^9}, 3.879137223125723*^9, {
   3.879138012110504*^9, 3.879138028331415*^9}, {3.879138104701779*^9, 
   3.8791381185525646`*^9}, 3.8791383815864744`*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"26875aad-2d40-4f23-8f9f-cf93dc12ad0c"],

Cell[BoxData[
 RowBox[{"Cos", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.8788747833057766`*^9, 3.8788748149034615`*^9}, 
   3.8788748942245865`*^9, 3.8788749472613497`*^9, 3.8791364841083336`*^9, 
   3.8791367834863873`*^9, {3.879136857327092*^9, 3.879136878014165*^9}, {
   3.8791369393617535`*^9, 3.879136939752268*^9}, 3.879137223125723*^9, {
   3.879138012110504*^9, 3.879138028331415*^9}, {3.879138104701779*^9, 
   3.8791381185525646`*^9}, 3.8791383816020966`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"7196aee6-2222-42a7-b2d0-3cc082812f06"],

Cell[BoxData[
 RowBox[{"Sin", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.8788747833057766`*^9, 3.8788748149034615`*^9}, 
   3.8788748942245865`*^9, 3.8788749472613497`*^9, 3.8791364841083336`*^9, 
   3.8791367834863873`*^9, {3.879136857327092*^9, 3.879136878014165*^9}, {
   3.8791369393617535`*^9, 3.879136939752268*^9}, 3.879137223125723*^9, {
   3.879138012110504*^9, 3.879138028331415*^9}, {3.879138104701779*^9, 
   3.8791381185525646`*^9}, 3.8791383816020966`*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"66f23644-360e-4882-9f42-27d4dbc951b9"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8788747833057766`*^9, 3.8788748149034615`*^9}, 
   3.8788748942245865`*^9, 3.8788749472613497`*^9, 3.8791364841083336`*^9, 
   3.8791367834863873`*^9, {3.879136857327092*^9, 3.879136878014165*^9}, {
   3.8791369393617535`*^9, 3.879136939752268*^9}, 3.879137223125723*^9, {
   3.879138012110504*^9, 3.879138028331415*^9}, {3.879138104701779*^9, 
   3.8791381185525646`*^9}, 3.8791383816020966`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"f0a7a13a-0a40-4fcc-b7d9-3fce62f1da44"],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Cos", "[", "x", "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.8788747833057766`*^9, 3.8788748149034615`*^9}, 
   3.8788748942245865`*^9, 3.8788749472613497`*^9, 3.8791364841083336`*^9, 
   3.8791367834863873`*^9, {3.879136857327092*^9, 3.879136878014165*^9}, {
   3.8791369393617535`*^9, 3.879136939752268*^9}, 3.879137223125723*^9, {
   3.879138012110504*^9, 3.879138028331415*^9}, {3.879138104701779*^9, 
   3.8791381185525646`*^9}, 3.8791383816020966`*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"04a3c8f5-4fb6-4f0e-8172-364606a5483e"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{{3.8788747833057766`*^9, 3.8788748149034615`*^9}, 
   3.8788748942245865`*^9, 3.8788749472613497`*^9, 3.8791364841083336`*^9, 
   3.8791367834863873`*^9, {3.879136857327092*^9, 3.879136878014165*^9}, {
   3.8791369393617535`*^9, 3.879136939752268*^9}, 3.879137223125723*^9, {
   3.879138012110504*^9, 3.879138028331415*^9}, {3.879138104701779*^9, 
   3.8791381185525646`*^9}, 3.8791383816020966`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"8e0065bd-a1f1-42d2-99db-04ce97635ee6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"Cos", "[", "x", "]"}], "]"}]}], "+", 
  RowBox[{"x", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.8788747833057766`*^9, 3.8788748149034615`*^9}, 
   3.8788748942245865`*^9, 3.8788749472613497`*^9, 3.8791364841083336`*^9, 
   3.8791367834863873`*^9, {3.879136857327092*^9, 3.879136878014165*^9}, {
   3.8791369393617535`*^9, 3.879136939752268*^9}, 3.879137223125723*^9, {
   3.879138012110504*^9, 3.879138028331415*^9}, {3.879138104701779*^9, 
   3.8791381185525646`*^9}, 3.879138381617717*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"ca0af609-8146-4a01-8818-21c3adc9665e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1: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
T252BP2//zfD////5v8DuOB52Q==
          "]]}, Annotation[#, "Charting`Private`Tag$714462#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1:eJwte3k01d/3vpky34vM96IoopJKJec0IiqpkLeUMUNJylCGlKESFRkakKEk
lKlIyTlmUsgUGTLP977M8/B7fX7r+9ddz1r37LP38+x97nle677krK4Z2bKx
sLBcYWdh+d+nz+CJybU1BbzDXVQ7zr4bDHiJzbQtK2D/8QdbL2p3g5NC/+by
FhSwh8Va5Ay1G9D3uqxcm1LAjZUZ3m8Ku0BxcDhP14AC/juYJy9G6QI8an9k
8S8FnPcsq8rAugNE3Lyk7/dKAVNdioen0/+ANNYbb1j2KGDWmtI7daACcNrq
qEtckMePfBw+FP6oQfUWO0xGz8tjFpWkeJGntSjOVMr7u7E8zng86xCqXId2
GxBllobyOBlLSYoTdchuZ/T51MPy2Gzx8MmN7vWoknXQb7+yPDZhHfSBXk0o
JC6o9sKcHE4LOig8YNaGTJ+7TG+blsMbU4mxb7ltaGO4mQTbhBwuKTUr1qe0
o++BatbJI3L4vsPn75GV7Yh5pXmW2SGHs/xONuXv6ESG+xVl/UrlcFj9yPT3
212I2lJ2JTFMDgdKFco4y/YirJLwIOCxHPad0F1/9lgvunLH+43dIzmcdyla
ide5F5Ur7mxXDpTDD25tvDFa0Ituu8Xr53jKYVRU1eFg2od6KF7KpRflMF2D
lYMvqB9ln9g+1K8qh02usglcyx9EFxN4OSqV5fDmiLPmVX8HEd/MAC1VSQ63
GvMVDC8NIruYWBNnOTm8S8fZ2evAEJIcXV8xKyKHV9OsZlq/D6F7D/rfci/T
sZFMjgTMGUZGJS+tt/yg4xC1vC85zqNoY2NfZ0U5HbNcWXtnFzyKZvvUzOxK
6PjvxMveH29H0QuuEsOkAjq+pPGMO7ltFHXpjR6QyaDjrpInqXGHx1C22a78
b2l07NpoGtdgPob8ne5omKXQ8YlfcoF5bmNIMZSqEp1Ax4b/xIUeJY+hq3X7
xYUj6Dhp2Dr0PAcDaXcHPst4SsfUG28CViUZSGiyVuBkKB3fDHY7ZbiDgT5R
bTgfBdHxEdtoywVzBlo0DpnkuEXHeSOVX8wyGehBR/vP+Qt0rDU7eVpJh4nM
mIq60WZ0bBxdkOpjykRb11xKdpnQse7JH/o+DkxUS+f86mpIxwUXzd96BDOR
mI3qu7FDdDzDuJl0ppKJhm56yD8CZL7lnzcSzUyUH1gUu0WLjpfj+wPU+5nI
/N25CLtddAz4OGEmC4GSRnzudinRcUelmqP/TgLdXKpY9t1I7vds6s15QKBj
fBRPGTk6Fnp+JKL5OIFGVJOdzSTpuJx3n0DpJQIVaI8Pz4uR9fHvMtNwIlDo
qX220VQ6NpVz7DjuRqDt12v+a+Qj84neucHxAYHY7on/cV1Hx8+FFKJdwwjU
GG5lJMxFx5aX2bvpLwnEtGeExazS8J8HFi7OqQQKC777oHWOhoWzD93nzyaQ
RrroHbEJGuZeGllvlE8gL+LAlae9NGy7wZOrupxAMZZ7hmAHDXNZL219/pPM
r2G7zUQzDcOX31TF6gnUcVS5K6GOhk338S8d+UOg1TwFc6MfNJzdve7BxnYC
0ZRlWthKaXjw2tPKT10EgjFiZ3O+0/CCwtGsmT4CWQoI1Vnn0XDUl7A9g0ME
uue3zkAki4Zv+L49/XCM5HOSrbI0lYYLbrrNthEEKrVZPuz2hobDLxbI/Jsk
UH/zDNoUR8OJ7YsofIZAXHrE/uZoGq5382ienSOQ0rehvKAwGp7P0v6Pd5FA
uqo9O/c8ouGPCgp6dUsEcnjdljEYQMPq7t9fHV0hULBwk8pzXxq+5HnllNMq
gdL8a97petJw7qZzlgfXCPRzpkJh4ToNu36wqq0gMeNy0ev3TjRc5HHs+SqJ
Bf5+lTKzpeHVzZ7f+km8zeBT9PqLJH9Ju/b6kNiw8AP1mykNx3L4U8rI+Ne3
v3viZETDw8nKet/J/cMT43mlDWh4Sfz7P9tlAuWIvLz/8ygNX5MIay0k828M
esbuA2hY4nHJvsp5As3Mh9xR3UvDP2/t4bk3SyAxp6ClDnUaVhuP1BmbItCe
jjsej7fScBL3yTWuCQKZnro1pa1IwzpVEbvrGQS6VeR6jaDRMCvNdubECIFe
7rwy+lqC/D66c+T2AIG+vbW9bEil4Y0STqomPQRq33Cxl4Wf1FPzxte+DgLJ
Lp9us2Sh4b33+hnCjQQCzvomlEVZfHOqOD2rhkCXuo40FE/JYmefJMhWRaDE
0j3VCoOy2KThJz23gEAlu3foNHbJYlWtrEcSuQTqS1EuCfgri63SannUMgjy
vJD51v9LFn8esr7jGE+g9+fY0959ksXMLheXnXcI9KNiWdH0oyy+0KJ/W86d
nKe9s4k8KbJY0//5rqIrBNoqO/zS4ZUstvRJlBU7T6DMgZpglXuyONWq2ENc
jUC/TSu52r1k8RdJ2bIoeQJN/ii6F+Imi6vC/z6rECPnI+PTbYa9LH65Vqly
cJWJvni8dMw4JYujQUNadBUTydtcf9uiK4sPpb3+eOcrE4Ua6naxHpLFWaPK
nfxpTGS1ZfbcWQ1Z7DUpeUvmERPxtp0+uCAui882d9cIkOeTe8Vmb3mKLD4W
OHVJdRcTdeWs5erzyuKWMz5vp+SZ6FPIh61xKzL4lIiYtOcKA1lorxM/3COD
r940qbf7yECVyl1GV9pk8OUGYY6qFwykviEvNLJRBl/5efdjYwADcY/bsA+V
y+C9cfesh88zUGYCZoakyeCih/xAkIWB2Dk9y5pvymC5qTW3+1pjyHniJAuL
swz+WSXAFy8/hlo6Nu3fclkGh/H4WNvxjKH03IZMr/MyOPwqX/BK/Sgytt8W
Q9eWwS/ZtM5Y2IyilOoBV0duGZzO5le2w3MEnQw/R199IY0PODwofmw3hG6r
C+rpPJPGOj54Z/rhIZRcX3n9aYg03pBhohNIH0KrFK0S+TvSOHPP4x6n1kH0
4Zm8nY6NNHYN2cYQ1SV/7yKJtKdq0jhbab5lj8QA+hH9cI9CiRQ+v+InmB7a
i3Riv5/UHZPEpq7bgWt2GxoPbV/mGJDEJYF8LIsmbeil71Jq0T9JrPZD7Yv2
yl80dnEv9/4GSawQkfiATecvCpf/jFS/SmL3rw2bQv60oM536dupDyRxrZfl
xquMJuSe/YrSqSCJ91Ga2636a1Fyxa3mG/9J4GKRE3E2X9KRRUCEaG3KBryL
ahS9n/cPqAGz3J6JG/CL31KRRQ5/AFgyWaTHbMBhquuK+Cr/ALqr1D/XJxuw
Sci5caZ/C+i5mJgi5r4BZ4XsH66cbwV2+zP3WxzegNu/52twN7cD58lqS0aH
GHb5V6CmubUbdH5QPRv1Rwxr+8R1M427wSmHJ8fAbzGc6V/EcftuN9jeZaQS
ViqGKQOfxnmbu8Hkr9ZpjTQxrGgl9oPi0wPc3w/e9/YUw0ERBadPF/cC30vs
H3mpYvhFYgzrb8UBkFmr87iRTwyvd3t35vnxAdCjHeIcyyWGWYzKGrY4D4Bj
MqLbti2K4hB5Le7UTwNA4K9iplG3KK6aHJkVBYMg7szx7BcZolhKinhyRm8I
1BU/Drd6L4p3iBe8jXIYAmzqDa4qSaJ4n2Lsj7iHQ8BOyHzn9yhRvG3fb76V
yiGg9uvqpy4fUXxdcIw+fGQYoGNhuUoGopjzqFOz9o4RMPm5KWr8qChuYZ/9
m3FiBGzcJOmRD0QxT2PFhW6HEfCAPWmP/k5R3LHtWU1AwggwxJ++OEuK4oqr
7ULl/KOga2/L189DIrjQ/d3XhdZRQHkv/cq3RwQn774rdHZyFBwRt/TSaRfB
HwrWMxzXj4GU2eH9rbUiuL5OxejX3jHgkrNUsJwrgj1avJ9bRI4BFlUaOhwo
gluLcp75AwbwFjtoEegrgg8UP9154BwDzK1ZrZR7iGDLmt4bSY4MwKxP3n/c
UQSHH3ncezOCAdo81b4YnhLBku6BlE19DGBsZWgSriuC5Wmqhw/MMUC9vuts
w0FyfUKzDst6JqiUzdUw0RDBV40a5gPVmCC39EDWBQkRPHVd8VLwDSZQ/3jR
8DVFBCfyzTyd8meCD9F3iS5eEZyg0sDJFcEEbxzLVG1Wqdj87yKnYg4ThAud
SHXspeJ8v4rYEwwmEFh01ktvp+Ls7UqKy4tM8LD36RCjiYqNBA7FG/EQwC+3
UfF6JRWXSLA0zMoR4Kq5eZLHByqW7Bg5Ln6aAENHfQ/lJ1MxHH3lymZOAJtt
8d2Lr6nYcMshz2d2BDBj66P5hlPx1KBe8vvbBGge5UToERVblD2LVAsgwOkm
JQvWQCr+qPZm/HwoAXRTnGICPKi4YOrPvaQ4ApSGhe4vd6FiJd+WB0XJBABe
GX+5Han4jo/Z88CPBNh9ckr8kTkVc8s8914rIED2HtEvP89R8RZPtc2fSwig
KrfHROAUFfPvXA4W+kGAjdO3I8MOUvGGO/NqX5oIEN8Ro9Gwj4r9k7lOcbQR
QKqisEFEg4ovf+Htm/lHgKjMLldjVSoOerj4L6SPAJSXbJTnilR806ViV9UQ
AUL9N2a10qg4ydG+NXWMADxXjxlKSVBxvHYT2jFOgABje8KcQsVOr7j/XZgi
wBoIfhzHS8XzGkuq22YJcHtLumoXBxX/6vjw5u08AWYpNT/lVim4IpamVbRI
gOvLhJP1HAWzlhsx7y4TYKxfmPftOAU3sRrkDq4QwL52Z+rAMAUL2FKeTq4S
oPfLOb3NvRS8xSPDM3GNABaJHkMO7RRctX+b8xyJ/z56cT+tiYKBZvy1CRI3
lNHTL9VSsC3KrntB4p9r7+pEqyg4atSDbYqMV7Z328yPYgpODQzhWiH3K7yR
K+FXQMGlx07/yyPzyftwQHtXLgU71I88UVgiQOZgqdVIBgUXfzwoDRcI8F7O
4P7r9xTct4/tIf8cARL/a0g7m0TBBkkxbY+mCfAq0qxuXSwFWzYekfw2QYCI
2u7pwigKlnGa1H/FJPld5yBx8ykF1yVd8tw6SoCgw+MHtgRT8OoxgRTnQQLc
8fGw6vSnYNOIA32WvQTwzFsNeuZD8qMyvZuL1M9Rhb9uxYWCs9k79a1Iva1t
I6azHSn4g/fYJsk6Api/lpKwt6HgBTfNY/5kf5ykKlvVm1Bw2+7XYQ6FBNA5
kRV0/zQFj+am/R3IIwC8r5mmpU/Bmztb3opmEUB96dh0sjYF5x2t53qQSACV
XTXi5poU3CCdiKtfkv127dwBYXUKDr324khROAHEeq2DvDaR8aZMloruEmDp
h5+4IR8F66eW+0mT8zPNwXOAk4uCA6U1e8fJ+WJqP7H8uiaMdU5KlXroEKAr
OzZ145QwVqpMcIjdQc7Hy69aC63C+JDsDV19NgJ8bzxo+bFBGJ9mzMTmzpDn
hUBVoPUvYbw7YJNx0xATpNz7U/MLC2OOvHJn1RomCHGcvpT4ThjLiawb049k
gsA3XoEmCcLY0/7L8rkgJvDtZEvleyWMWRRz/EU8mMDFSHjK/bEwfiOgG5Jh
wgRn96kF6rsJ4yfBzc2Wokwgvd7+/fQhYdJPhyu132MAi8Kf5E+HMP66IqHw
/CoDJLjucDHcJYz9/oWGrpowgGLb4u50JWEcZeqUVq3CANvSQ0ut+YQxf94V
RefaMXDoZM6/+iYh7FdeKC7EPQYC2MRLWGqF8HdX9tDwsVFQkeudrFYphHM5
8mpLfo8CA9qxq8FfhbDMIG1h56tRYDzesnjwtRAei9sac0Z5FDiEr4pm2Qvh
icEhqda9IyD9mPVCp6UQXmnIXXaWHAHMxYp2vv+E8H+Xjea+LA4DV+uwJPsT
Qtjg0+s0x6/DwFtj4w66uhCmpdHMT+0eBrIfnj2XnRPERz9OLbrSh4DTLmXO
NmlBrDGUXjOL+4ErZ/47d0FBfMx5lffJi35wu0nnOIVNEBdfGSgaud4Pgt1s
n+gNCuCCEa+zTLl+kPo5XuJLlgBedr9go36nDwzv2qAWeUwAV635lVC29YLL
uzlMTrnw43ijm0uel7uA9Z7OlJISXqyhwzP/6EMjUPbct+b8hgeL/1KS57fI
QLjjpHJvFA++IPjE5cXFLGR82PqcyUMeTJ1eurMomIPuCYSkAWcefJr7Rh3V
JRe1vukwEdIkv3/9dZWU6nf04LdfZlY1N/55c/fujfplaEC5wnJ6kgsL7LVS
6IW/kffTthD7fi4cMHvj26b3vxFllshr/8OFn1pFZ+4SrkfaReICZQVceEv3
jnX5XfUo0sTxa2QQF17IKZnd6tOIjgTwU/dIcuEyraHxitQ/KKHjTOmtg5zY
6+S0XnddB1LvU19s1ODE7zorA7SUO1HpiPD27Zs58dOSMDsD/040MFf7akCA
Ez+/2/s2SOMfUqYY3DjTzoF9/4y5J+t1oexjR+RVPTjw6eFZ1qz4blSaoeHX
lc6O6z34XSa39qFzudTc/fHsuNuvpljybB8aKJgcjXrGjjWpN04KefUhnh+Z
Jidus+NtiW8eWVb2oRN9W7d91WHHP6ruiYdf6kfN4ps6n/WwYb8hOntr0AAa
vCuqpSPOhoHIfe+glCG03ieDeLaeDXsPnqo9VT2E1Dz1krqWWfGTA0mOdYwh
5O7ss/52Nys+c311YGbHMOL6r78lPZUVfyo6KFmRO4w2anx2oxxgxXobp03U
skeQ7rZTWy5uY8X791YlaNeNoCvKw+1pcqz4PbFBl4U5gj7RZY4c5WLFAQ4z
J6I2j6LD/IEUz1oWLK9xfoz95SiyGjib0WHJghPiLg/EXh1DQd1MK+WzLLg/
fkUoNmgMpbY/EPM4xoLL1O3CdV+Pocn6Ah8hFRYc5ad1K6l2DLHd0XseNLSG
VHX7tlhuZaDjbj5rtF9raEHiqMm3QwwU5pRll5+1hiIci3KQKQPRTSV2jd1e
Q79d0XyZPwOBHcO/T/OvoYwE0e6iJgYKUpLZOzqxihpa8z/aDTNQjczp+IDm
VVRsnlqcs0z6ofX5znmvV5HEXs72o6Rf8u59wCujvooUbh3pPezARKWtBa65
YqsoQm9oZONtJuKrG289tbSC7l0weZoezESvCkxT7pWuoAuPc6Y+pjLR18jN
R4eMVxAhhwS9BpiI579Ba1atFVT64ekO/WkmMqYn35OUW0F6zoG/S1hJv5iq
gA1GlxG+6zX9QYpA0KWn07ZuGent3adG20ygx7sSVnw/L6Oa79FnNDUItAXL
7s+6s4w4dpu1WuoTyD2w4/wPm2Vk5HNk/roxgUqPx3j26i0jYqLlzhZL0j83
SeSKiiyjKt9qw8duBHo+IrLjdsoS6ncxGlR5SaCBjIZTz0KX0Jvt6uo3E0m/
6hbunO66hDJW2wSsUwlUuyaY3qm1hKzmmzZq5BNIuqzmx5zcEvLdeFhDDBPI
MTh0WIh7Ce1v/nQ3rpxAXKK8Sod/L6L3LmWhCfUEOvu36qh57iL6T+uasnQL
6d9fP7Bxe7WIMnN2FmmR/n/cRsf/sd8i2qkScZi9h0DaylyJ72wXUXOc0Jtr
AwQKIUoxPr6IRFuUmu+OEOjvJ/9/rdsW0dkwk5q9TAJtvn1odVJkEdlHSd+L
niCQG2CV4VtcQAY9k4MvpwlUzIH3b/q3gPi+nps7PEcgoR++ZtqlC6i5FKWE
LxDI4smBWybvFxCQS5sJWiJQ+tnlaJfHCyjHI6yFvkKgRYlvuQ9vLCDq+jGD
S6sE0v13qynRdAHdwztPHV0jUNQbzelvBxbQhZ3d7bUk7nOYozTJLyCr7CvT
ayRW35a7g8m9gNj0TkY2kdhv+qYhN2Me9aAVZEjimvyd1+j18yj41aTbdTK+
1J3J0L1582i/+Jv8PeT+9key0o1i5tGK/MPHSWR+uetcqp3uzqOaU+ILn8j8
OWrVRgLs5hHXr4pVJ7I+owgGT5z+PBo8w59cSdYffz5dKW/7PDITs5j9QfLD
lHU6Vic6j5rfq827kvxp9W2xHV6cQ3eJyU+Y5Df4/ZA/W9ccurIgs+cTyX+L
87tEqbI5JMKQCz5B6qOoYVekkTqHVnuufQ0h9Ssq7F21uzmHeORShpdJvQUC
EmX8zs+hagFnLrVfBDLXs9R6oT2HPs5oaHFWEGi+ofNWNc8c2t3nsDeZ7Kdj
L2Kf9zFmkWz+G0WXbAJFWJjnrdTPop+5tzy7yP7bPtw6vS12FlXWXYv/RPbr
zXHVLRsCZtHbiG+GGeEE+jJ398Kq4yxq7S4zMg8m0EEu5fKfmrNoaRnH/fIk
+VC4He3QOIPQm8/FgkakXso11YbfZlDrC1n71zoEatshz6KZOINk2aY39GgR
yAb+sOdymUHNVkasdxXJfroguS+Jdwad1d3Gv3mWnG8bZ+fgyWkkvFeWemaY
iVadihOvt04jM1MvXvV2Jgq67cgL302jzD0u5/iKmOh59Nf29kPTaPZgPMfu
++T632Z3xG5Poau+pr0+nOT6lo85K5emUI9i+o/5KQY61MU21Kczhbyvi7Io
9zBQNTPVMEd0Cj0pluXM/M5A7bxLcoZZk8hKGlw7dZ2B1o6+Kn04NIFy4ksq
OavH0JETxLxL7QQqsHiZtPRpDD04e1jVNHcC2S6f70iNG0NC1qORigETSLal
U2/39TEk77f/cgltAnUVNqhzU8n1X9vWrRiPo1GV+YZSvVH0MfXt3or94+ic
cmf5dtVRJP7qmkMYfRztW3annxQaRc1zXOH6jeS54/vLOK5pBG3yMhaKXWSi
LfKflOPMR1Dx3Rk+qMNAO3VmZBzMh9Hy451cQV3D6MVS7FjZpkFUd63CVjJ1
GElIxCkKswyiJMP/yj7eIPFpmzaJvwPoOMU/4A/XMErctveqbegAehFZz7ZF
dQjtfqpnPTHej3bHXF+rvjWAnvqPBMD0PuTyPmNemNqLVMyfXl2b7UbbBZz9
D3X1oNpLPa/af3ajCdetAjc+9KAB1kfDIYndyFXrvUKjTg9iL2J7bH+iG7nV
Jp6M8u5GG1oqizYkdKGpERW9XT//oYR3N2od73YiLv/5+GOurSj5RvroSkUL
MrZTSKj3rkJfxesv/jhdhSp+tgbvPFMJ1keumFWpVgJ7z78V/6lUgQk28Tsj
rFWAZ2MbRwD7D+A6dNiotKkKHPdq923MqQYX+9mjnntXg59b/rm6idQCPqeV
nLvlNcD+sOuHtpF6oB6ttu3tm3pwJd4jUia9FRieuPhRZ6UFaM3O5ewQ/wvW
SV7NTrrUCvgMPOuPBvwFZ7MdTfJKWsGHOU9BZ/M24OX5R5L14V/APHn7YSFf
B7ix90rjmmA7+OJbWJixuwsYN6adzRP4B/apFmUbRveC51WXqU3WPWBXY3NU
YVUvWI0P1WMP7QHbvcZub13uBbmrD66y5/YAxaoNh3ks+0CqtNKQB3cvoNo6
NyDlfnB0e1CCYkovGIuRmlYrHABUHsqtI1194DWf+y7+/mGQmqJAHdg8CF7m
PJLw2jACJKptViL1B0GUWcLKkN4IKA/ewM/nPAhCUn6WlX4cAZs38OnoZQ8C
zyMKxt6eo0DH5dnY6p4hYORd5z7KywC5kY9kBTWHAZu7aLuNxDiojHRyS+IZ
BWaXUuu/aIyDe/yVOV83jYLs46CKz3AcPGXy4XuHRoEVzSH3U9A44N1uMaXg
NQqKKwueckyPg2057rUJQ6PAX8rm6JuaCUCk7cw99mkMtHMu7J8fngD7rr28
dfTnGNAYD1U34JwEyffgvvHeMdBXmkeb3j8JIgZF4nUpDHDEmXfx8PtJkOZl
9mHFkQE4irI/9vpPgT0bz3kd5GMC8zSdt3teTwHe/1BjtywTfIpsf/Xo6xQQ
43hxSnkHE9g4cj3cOTEF7skcbso+ywRlVDNrf4tpsNnHOjgmmglkV5nn/9ya
BhDtN/J8xwTuQ/6GKpHT4KE3/4fFXCZQ/P7hQEP1NPhZmHJ5spEJguxYxRX2
zoDtySba7/kI0GkYJeBxdgY0rLn1fZIgwO79KpzV12aAqJxBna0iAQYEz026
Js+AiK3CA7naBNBeHB4qL5oB7HOCVcbHCRDV5/tPsmMG2IoPWr86R4Bj+Sk/
i6mz4M/zdG2KEwHikg6UiG2bBd+lVsARNwLMhtbnOx6fBaNTI16SdwiQbLWc
TLk7C6acunfkhBFg1SAs1i5mFtR2vHdzI/2t8R7FiK95s0Bz8Mn9NtL/cvMZ
3rVizgKpRvwpPJsApkpmePe6OXDxx39Hi/MJkHrIZm39xjngbTuZ8BwTYPmC
s/Y/7TnwQ0E/T7SC9N+3PH1yzs+BgYdKN/b+IkB8xL2C+zfnwOq5I6XsDQSY
zAhZ+u/JHLiQef7lzRayvoH4Wxxlc+Bhg+YLvR4CDLGmfWn5NwcSQi8kfxgg
wD6Zz3Ppi3PAkGsH65cRAoRoot13RedBKWEcZ88k+T1T5XZu+zxwP3XtBpog
wPZrDZ+26M+DU6/EPAqmCXAvuGNqxXYeiDb2x1+cI0Dj20H1er95wB3rOpyy
QADFoonrya/mQa7hqePPlwjg2b6UeTt3HshSeQtVVwjwY45z/OTveTDUtQM6
rBJAmiq0TWFsHiy9Mvh1fI0AzmqSznNcC2CHaLdVPYnJi/6HarkFcIbqukbe
TwDFVm3stdYC0DW5k9hAYhs/TZWbJgvAJzbQ4ASJc18dctR1XQBBMaurV8j4
PHkG76VDF8ACi2WBOrm/Wb3x0Pi7BXDPjv4gjswvnXFJqax4AWw5+cEuk8x/
lcfJ7kXHAugUdrtgT9ZnuNHt7dX5BaDe1O1aTtafCO70HaQuAoMbZh/J+wmY
NnuoIKa2COiOh8TdSP6Ouj+zGtFdBPXFC/llJL9RYbEJhdaL4MJce2wByf9Q
+ruucN9F4NJ0pPY8qc++yiza5ReLINgiyCy2g9Sj95vF/k+LQOftpMF9Us/O
1bJYwdpFMPWu+dMGUu/tknXtvcOLwHizV8JJsh8aDfvMQmhLQMKdop9J9o/i
FeaLS/uWQC23n0ob2V+e9+dbNM4tgU1aSX/Syf6TLuQz6QheAkL3KvuOJJH8
qew6oza7BLzVA44e9yP5OwbC2YSXwWJdLvHBneTPSu93s8oy6E/3k8+/QvL1
/MKpO5bL4Invz/ByE7J+ziD9up/LwNZRZRRvIedJ7mnwm8Fl8G79NrqNDAGe
a72s8mRbAS6X/7RkCBFA68ZHHTnNFaBZyrA5OMsE/l3Nh12TVoC0aR7f6e9M
0Jmvf9WzYAU4jPozDmUwwb5nOMq3aQVcYnuEhuOZYPxo6nAw9yo402NdauzP
BBZpPk+SnFaBazfruewjTPA1YPLL+4BV8GuXeeEpDSYQtbjckxG7CqzDMo8m
KTDBT6HTuwpqV0G8Ct3oKisZ331jW+PONXCasOEIz2eAqFMvONoM1oClY/9i
XzIDTGwWUOu2XQO+EfoOxDMGSGmb82NErwFrraXLKlcZQOxgtSLX8hpIk+pX
PirNAAuce/OlrFhgrojMjMrVMZDsOvUrzpkFGh+cSuY3HgNn/33okfNigR8L
E3hStcdA5hd5vs0RLNBpYV0RVXAM2DnxXdQoJ/E1l+tZ6aOgse4fxwllVmi2
P/qkftsIyHwVZOg7yQr90tpPl3MPg2pq0KAgCxvM7af//N0/BAYeBfom8LNB
Tc2q5MiSISDtHZBeupkNoig2Hl3fIfDA/B4P70U22NPQeN1qfBBckvHF0dVs
ELin7KisGABCr922Z71hh1sX/KxOH+sD1xJthPqMOWG5XOm6f5od4PGtFzGP
rTnhQd9pSkRnO/hoWLN5rwsnZBes/s4S0A6Yq3sOPn7ICSNfng7kqGkDV/7j
ddUs4ITHTKvaayz+AkeR7IYQOS7ouhjWo3nzD7ALWovaNcYF337vbm+4+RtY
OL6UuX+XB243I+4fW/cJPDztvndnDC/8vKYltf5uAwr/qXwl/T0vnHt28mj0
YAOK0fkXtymPF76/vbYweqIRZR7Q5RCv54WtoP32oEQTatkiWbvMzQctd2od
4c5oRpvZCm3Kb/DBy/rX7hM/W1F5NufT8/r80Fe/Ky6v9h+qU/1aXG/KDzmd
80YfiHWhvynOM/p2/JB6cdmW52gXYsb9MdO+yw+ri27YepP3LbFH7zcp5PHD
7tJvh5VNu5Gt9YlvY/IC8DfXtvatBT2IQyRy4M6iAFQI4Dpt918/ojB9BSjc
grDsd/r6Qr9+JFdpv/sNVRAWtcqmd73tR9reWkGVWwVhzBcFzUCiH93q690k
fFEQ5p8YDz3oN4CYn9RtE0sEYTgjJm9v9CBaeSwdqlEnCE/XJUiI5Q8iPgeu
z+XtgpDTTHIo7+8g2iLzl2N0RhCObaz2PS4zhLKLYb2EiBBkLxlOSHw9hMaU
h65bHROC554IyrQ+H0bTGzoC0wyEyH4pjxnIHUZLHPUvpo2EoJWObNynxmG0
/t+3oqCLQrDlA2PtqeAIUnr2RDjNUwhOm543O3xvBFkt7c6aShWCxFVh/dP/
jSKHIZUyrSwhqKTIW3LUbRS5NNFbA/OEoL3dLefZx6PoTsZ6VvFSIcgMe231
qGgUxVh3Gmp1kPmMOyx4K4yhP9WB4wGCwnCKT7nt+N8xFKEde/ScmDD0vhQ/
kzMxhoyyPr3cJCMM6wg5ahUPA9VE9R4pVxaGti8NDWZ3MVC55cEX3MeEId/8
kfhzIQwU0GjK/GMgDF/1mX7ekED6Fx2XwylnhCFd+mGd/2cGKtz6mqFrKQxr
L6ipnu9goNy55YPB3sKwgjl/cHIzE910FIk28xeGYn9CD6/uYyL1DpUx5WBh
mEJNC8k2YKKPxWZR1dHC8GPV2mbqNSZKDv0ywpcjDD39HipnZDCRDUsd6MgX
ho93DLDOFzKR/I3BiA9YGP4n05ww+IuJ4kzFwMkaYZjqL/bk6wgTRSncfPZk
WBjai91NUKYT6GzUo6GL48JQbfyX5tutBKKsSzqwfU4Yrrt/1axMk0CPmb8H
6zgo0M+emTlzikAGlsNaCbwUyMUflMj5H4HWN7KEX6dQyPOiI/qrLYGC8rdp
UegUaOX9lEK9TaAjW3XCehQp8E98t3muP4HYXlsMZKtSYP71Lo3VEAL5BoQ+
PbOfAk3vayp4xZF+fO5Nv8IhChyfqufKTCbQokPBvmldChwlYikPPxLI/dRo
X4QxBdL883WVvhNIo5htn+0FCnTd81p3rIRAkxqST3bZUOD17V1S534QKPPd
jj5OJwpsU+/NsKwjkLOk3t7m6xTokyk5JdxMoK2hlx4ne5LxljiabNsINLLm
0et+hwKdb249dqGLQCmuTzR1giiw4auS5nwfgez6k0M3hFKgbsOL2N3DBNpo
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
e18N/T9ymX8F
          "]]}, Annotation[#, "Charting`Private`Tag$714462#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-9.999999591836735, 9.999999591836735}, {-3, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"cos", "(", 
         TagBox["x", HoldForm], ")"}], 
       RowBox[{"sin", "(", 
         TagBox["x", HoldForm], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8788747833057766`*^9, 3.8788748149034615`*^9}, 
   3.8788748942245865`*^9, 3.8788749472613497`*^9, 3.8791364841083336`*^9, 
   3.8791367834863873`*^9, {3.879136857327092*^9, 3.879136878014165*^9}, {
   3.8791369393617535`*^9, 3.879136939752268*^9}, 3.879137223125723*^9, {
   3.879138012110504*^9, 3.879138028331415*^9}, {3.879138104701779*^9, 
   3.8791381185525646`*^9}, 3.879138381727068*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"f99e6781-9e90-4cf3-b960-1d7655c84c21"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.879138176128521*^9, 3.8791382286486177`*^9}, {
  3.8791382993626776`*^9, 3.879138376525234*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"e94782cd-6a0c-4970-afc5-37eaf78c5739"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating function for 2nd order differential equation", "Section",
 CellChangeTimes->{{3.87887491906881*^9, 
  3.8788749675640244`*^9}},ExpressionUUID->"5fc2fbed-cf6b-47f0-9442-\
04140baed686"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"VariationPara", "[", 
     RowBox[{"homo_", ",", " ", "rhs_", ",", " ", "y_", ",", " ", "x_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "sol", ",", " ", "y1", ",", " ", "y2", ",", " ", "w", ",", " ", "v1", 
        ",", " ", "v2"}], "}"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sol", "=", " ", 
        RowBox[{"DSolve", "[", 
         RowBox[{"homo", ",", " ", 
          RowBox[{"y", "[", "x", "]"}], ",", " ", "x"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y1", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "[", "x", "]"}], "/.", 
          RowBox[{"sol", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
           RowBox[{
            RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y2", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "[", "x", "]"}], "/.", 
          RowBox[{"sol", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
           RowBox[{
            RowBox[{"C", "[", "2", "]"}], "\[Rule]", "1"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"w", " ", "=", " ", 
        RowBox[{"Wronskian", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"y1", ",", "y2"}], "}"}], ",", "x"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"v1", "=", " ", 
        RowBox[{"-", 
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{"(", 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"y2", "*", "rhs"}], ")"}], "w"], ")"}], ",", "x"}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"v2", "=", " ", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"y1", "*", "rhs"}], ")"}], "w"], ")"}], ",", "x"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q1", "=", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"v1", "*", "y1"}], " ", "+", " ", 
          RowBox[{"v2", "*", "y2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "q1", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y1", ",", "y2"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"y1", ",", "y2"}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Blue", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"GridLinesStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", "Dashed"}], "]"}]}]}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8788749688756013`*^9, 3.878874976875707*^9}, {
  3.8791365409684286`*^9, 3.8791365959506245`*^9}, {3.8791384035737476`*^9, 
  3.879138515054515*^9}, {3.879138552520731*^9, 3.87913860428522*^9}, {
  3.8791388117590795`*^9, 3.879138827873412*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"bc46e0f0-621b-41a2-8f78-2283025f4cc2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8788749820094852`*^9, 
  3.8788749836382256`*^9}},ExpressionUUID->"f0c92a0f-9157-4e50-a063-\
857e6cd54993"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Question - 2 : y\[CloseCurlyQuote]\[CloseCurlyQuote](x)+x^2*y(x)=Cos[x]   & \
   y\[CloseCurlyQuote]\[CloseCurlyQuote][x] \
+4y\[CloseCurlyQuote][x]==Sin[2x]*Sex",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a003e1f9-1331-4502-a985-72829df2cb6e"],
 "[2x]"
}], "Section",
 CellChangeTimes->{{3.878874961398888*^9, 3.878875016972192*^9}, {
  3.8788750470555086`*^9, 3.878875072843892*^9}, {3.8791370596187553`*^9, 
  3.879137062089589*^9}, {3.8791378584863205`*^9, 3.8791378743743963`*^9}, {
  3.8791379062072763`*^9, 
  3.8791379550779667`*^9}},ExpressionUUID->"f5e9a008-d8cd-4317-b418-\
13443320988e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"VariationPara", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "\[Equal]", "0"}], "}"}], ",", 
    " ", 
    RowBox[{"ln", "[", "x", "]"}], ",", " ", "y", ",", "x"}], "]"}], " ", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.878875032699025*^9, 3.8788750368850603`*^9}, {
  3.8788754827070904`*^9, 3.8788755135192413`*^9}, {3.8788756524747705`*^9, 
  3.8788756544667015`*^9}, {3.8791369269545765`*^9, 3.8791369619666977`*^9}, {
  3.8791372832296724`*^9, 3.879137308493677*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"0af2acc5-b339-48c4-8a4e-9f61c49dd469"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Integral]", 
   RowBox[{
    RowBox[{"ln", "[", "x", "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], " ", 
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox[
      RowBox[{"ln", "[", "x", "]"}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cosh", "[", "x", "]"}]}], "+", 
       RowBox[{"Sinh", "[", "x", "]"}]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Print",
 CellChangeTimes->{{3.8791385754426136`*^9, 3.8791386076177454`*^9}, {
  3.8791388170480795`*^9, 3.879138831035824*^9}},
 CellLabel->
  "During evaluation of \
In[167]:=",ExpressionUUID->"4f269a4e-83fe-4924-8442-3a04ce460506"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1:eJwdk3cg1Y///dG1917huhdlpEGS1OupqKzsyEhmGSWUESkjKSpbJDtE0SLh
4ymyMlNSkbyziewrGd9+v/PP+eNxzn/nSDt6mbow0NHRGdPT0f0/l8lojU+P
nUO6/y+WWu3KPtb1k7PI7m+zFqXGVFtS9Gh/04FZXDGOMPjJw1Qr8sDLLY48
i4t+2heCphhrP9OY4vU//cZApjg/j2zGWtmgkzwPV2fw/kf7eTUextq60CUO
ODaNyTvFs8h/ttSu3VVhihycwGjF6P23l+hru7yaXMSKJjCwhOYo2ktfm2ts
01DiO4G36bVl+yvoa/X4wiN6mSZwJ7+m8N9g+trUpG4G+R3jSLpA1k5ipq9V
S/febA0cRS/5MLU5Wbrai49LV3j5hzBjWpVjJ9s67uK6EH548Cc6VEe77utf
wzkfJS7fpz8xdg8pIqpkDX00H1M/HfuJOXy2mlvM1/ByZ86J5OD/0E/ZSu1E
zl9cmFTU3dv2A/f0j6t81V9FpvCVrKM+X5FEi7z1vZOGNw0ulxdwfMXWQFZz
pSIasgjNt7IUfMFwB4fm8ggasj2eWn7f14sVno57r2rQkLtzwMBI5zOebx+c
bShcRhHxhhVLkY9oGXnVkHZvCU+6UrO7g1tQ7s8Nm8DIBbzt7RsVX9aMGkop
UkrnFvB/wfVepjNNKJqmPcmpt4AyCU6Huu0bkS3mj5cd1wLOY27fh8P1+KyR
104mdR4lVY4r5fBWIjnTT0Hg9RzO3k91nkv1Qd/iooY8vlkMZkhsOKp+ihAd
NrNyXfiNymlOTQJq1whPgb1xXW9/o5nKl+pIrURit36Na7T9b/R29Zh4l5hP
6NwyKrqTMfNvN2WbTjWviYvSdCr2CtPY1Pb1topZM2Gwk2vXTr9JPBfwrclG
sYUoyNgQeKQ7iSwyfaSILe8J7RsZcy4Sk6gX1B/y6WUrwZnOmNbYMIFt8j98
Lgt0EpdnjnIti07guSM+T/smu4lKyh6H3M4x9MzyT5J48pVg9FrR5j4/gprL
tJe7Rb4RDD+HVzeOjyCHQUC3TsQ3wk7ZwllRdgSf0gK4L9j2EYovat6oDwzj
zIkrt2o4vhPT+xk8xcyGsSKkpqZUbZDQ63qwnntsCDV2vH1hnDJEWFesg9ap
/3Dvp8/JNS1DhP3XjfLNg//hrqBfV5TWhojNKxqb45T/UK5F+AiLwzAxy/P8
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
1ZV2Zvw/q3M6Ng==
          "]]}, Annotation[#, "Charting`Private`Tag$764090#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8oHGMDgg/2UkgTvhtkI/mrG4iUM5gg+
a6q7kWSsEpwvfONozqKJinB+0OFZyZqnFOD86ve2ORMey8P5O8pnZa33l4Pz
/SaFKvybKQPnu8/d6+fxRgrOX3a88lpxtCScH9cyRfT8CnE4vy6BeR23sBic
z6Arv9+5VQTOv9U9s331VSE4X4YrY+UXJ0E4P9tUi/W2DD+cn2x+b8Xhw9xw
vlaF1f+8JRxw/sK7wUcqHVnh/OeNojbuEkxw/q6pGq4vwv7uh/ENXt78oj/3
G5zvsus259+wD3B+wcr1PwSFH8P5YWnKCy/VnITzj5+52WUcfMIexrfSPbgp
YPpjOJ+pTPROiuQHOJ+dJ6Ax6d03OL/5wTXnosV/4fwNs9sC6j4xOsD4+YtS
BJ6EscL5cVmzZNsbOeD8zsAyS+M53HA+i8jUZ/W/+OD866dbP7TwC8L5odVJ
ZrMOC8H5Odyvlc5FicD58quPTWN7JQrnV+9wDuafLQ7nFyzL2WamLwnn8zCZ
J+k9lYLzXXNDpmpNloHzJXbK5ruqyMH5k4o6Jhpcl4fzg9r8deduU4DztaJb
QpfUKsL5155xLpocqgTnn0t66igkrwznqy2VlOrsR/Ch+QXOBwAXN/oI
          "]]}, Annotation[#, "Charting`Private`Tag$764090#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-9.999999591836735, 9.999999591836735}, {-3, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
            TagBox["x", HoldForm]}]]}], "1"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8791385840363173`*^9, 3.879138607742715*^9}, {
  3.879138817126172*^9, 3.8791388311607943`*^9}},
 CellLabel->
  "Out[167]=",ExpressionUUID->"c1db5061-96c9-46b0-ad5e-77a5c40982f0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.879138520678776*^9, 3.8791385346269712`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"8cc17478-62f4-43a4-9d66-51baeea95e02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VariationPara", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
      RowBox[{"4", "*", 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], "}"}], ",", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", "*", "x"}], "]"}], "*", 
    RowBox[{
     SuperscriptBox["Sec", "2"], "[", 
     RowBox[{"2", "*", "x"}], "]"}]}], ",", "y", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.879137343129243*^9, 3.8791374160841985`*^9}, {
  3.8791376079392757`*^9, 3.8791376411729136`*^9}, {3.879137731770422*^9, 
  3.8791378529670596`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"67c15501-9b10-491e-80c4-b93e79319591"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}], " ", 
     RowBox[{"\[Integral]", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["Sec", "2"], "[", 
         RowBox[{"2", " ", "x"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "x"}], "]"}], "2"]}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Integral]", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["Sec", "2"], "[", 
          RowBox[{"2", " ", "x"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"4", " ", "x"}], "]"}]}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]], "Print",
 CellChangeTimes->{{3.8791385899770856`*^9, 3.8791386107449617`*^9}, {
  3.8791388196980414`*^9, 3.8791388343545823`*^9}},
 CellLabel->
  "During evaluation of \
In[168]:=",ExpressionUUID->"37479bb8-0321-4e70-bce1-479934843035"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1: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
SKd+4KiONBs0apoy+xwJtDir3yZIng36KgWJ3/QINEc5bpmkyIYgl5D0WTqB
BFf7zKoobPgo66tLLCTQ56O9W+QZbEg/EZy1sVGAOkUzpmIxNiw4tb5oV54A
jaWfyKZqsEGcKxr5+44AUXk8VZY2mU+ipPKRuQBp3XjemLaaDasMla7UrhAg
o1We4Zq6bDhQofsqVESAjvmMTK4yZEMLNvzt4Us+8lfMe/HKiA3+O6pyhMP4
KLzA12X9VjYIaSTW/DnMR9l/pr4a7WRDu5/s9pz5QTRzef75Hhs2HLLL1Dqq
P4hkNMqOfTnEhm9KpkbJQoOIWR2qYuXAhqIShTNXa3jIRHrhdTsXNizGd/fv
seGhmzHSx9x92HB+U1Iyw5mLNB5Tadej2fAiMC3Jz2gAbdjR2iB9hw38vJi/
gWP9yIzz8NrNODZo6n0JsMrsR17azPH4R2wovfrpYOqSflT8WqMhPYsNnl61
OSL1vciyat3Vyg9sUKhGS3apdiOXE+ObTOvY0JR3n5tY1oUCpApG6z6zIdLV
nrbYtQs9Mt/o1PiNDcx0bR2TZ51o4Dts6upmw1ZJt9CHOh1oJkB41KWfzN+8
lep6/zeSUanM5HDZoF0Q0yT9vR2tddyhPDxM1lustp5v+guZLJD8fHacDdjE
KfGNF9vQwdTaK1NTbIj60Fevkd+K3EwiDc/NsqG5JXBvCfcn+r/zYuH/z4v9
H8wCQUU=
          "]]}, Annotation[#, "Charting`Private`Tag$765372#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1: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
THLBQLx2EZojRP9/rxP+/14n+h++Hq/O
          "]]}, Annotation[#, "Charting`Private`Tag$765372#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-9.999999591836735, 9.999999591836735}, {-3, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"cos", "(", 
         RowBox[{"2", " ", 
           TagBox["x", HoldForm]}], ")"}], 
       RowBox[{"sin", "(", 
         RowBox[{"2", " ", 
           TagBox["x", HoldForm]}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8791378538418474`*^9, {3.879138590070813*^9, 3.879138610885558*^9}, {
   3.8791388197917204`*^9, 3.8791388344639263`*^9}},
 CellLabel->
  "Out[168]=",ExpressionUUID->"148f79be-876a-4181-8519-7ed642ba81bf"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.87887502366098*^9, {3.878875079954038*^9, 
   3.878875082633407*^9}},ExpressionUUID->"c417804b-8235-43d9-99d3-\
78d7954458d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question -3: y\[CloseCurlyQuote]\[CloseCurlyQuote][x] -y\
\[CloseCurlyQuote][x]-Sin[x]=Sec[x]", "Section",
 CellChangeTimes->{{3.878875084519462*^9, 3.8788751067086935`*^9}, {
  3.8788751491339283`*^9, 3.8788751641524086`*^9}, {3.8788757082155557`*^9, 
  3.8788757101165233`*^9}},ExpressionUUID->"73187855-58d2-4923-a025-\
bedb2e83c34b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"VariationPara", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}], "-", 
       RowBox[{"Sin", "[", "x", "]"}]}], "\[Equal]", "0"}], "}"}], ",", " ", 
    RowBox[{"Sec", "[", "x", "]"}], ",", " ", "y", ",", "x"}], "]"}], " ", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.878875165318633*^9, 3.8788751952761993`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"93e698eb-89dc-486a-aca7-1b58b031cc89"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Integral]", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"Sec", "[", "x", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
            RowBox[{"Cos", "[", "x", "]"}], "-", 
            RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], 
         RowBox[{
          RowBox[{"Cos", "[", "x", "]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", "x"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "x", "]"}]}], ")"}]}], "+", 
          RowBox[{"Sin", "[", "x", "]"}]}]], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"Cos", "[", "x", "]"}], "-", 
       RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Integral]", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"Sec", "[", "x", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"Cos", "[", "x", "]"}], "-", 
            RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], 
         RowBox[{
          RowBox[{"Cos", "[", "x", "]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", "x"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"Cos", "[", "x", "]"}]}], ")"}]}], "+", 
          RowBox[{"Sin", "[", "x", "]"}]}]], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
       RowBox[{"Cos", "[", "x", "]"}], "-", 
       RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}]}], ")"}]}]], "Print",
 CellChangeTimes->{3.879138647601839*^9, 3.879138868119629*^9},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"83a33a4a-85fd-4799-9cbd-70abc6bb192f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$792794#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$792794#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-9.999999591836735, 9.999999591836735}, {-3, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          TagBox["x", HoldForm]], "-", 
         FractionBox[
          RowBox[{"sin", "(", 
            TagBox["x", HoldForm], ")"}], "2"], "+", 
         FractionBox[
          RowBox[{"cos", "(", 
            TagBox["x", HoldForm], ")"}], "2"]}], 
       RowBox[{
         RowBox[{"-", 
           FractionBox[
            RowBox[{"sin", "(", 
              TagBox["x", HoldForm], ")"}], "2"]}], "+", 
         FractionBox[
          RowBox[{"cos", "(", 
            TagBox["x", HoldForm], ")"}], "2"], "+", "1"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8788754399223967`*^9, 3.8791375685951805`*^9, 
  3.879138647711228*^9, 3.87913886824465*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"14318d25-92de-4f2f-937a-38c669ad9fbd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating function for third order differential equation", "Section",
 CellChangeTimes->{{3.8788755392861557`*^9, 
  3.8788755767300177`*^9}},ExpressionUUID->"a9fb9f04-2a71-4cce-8401-\
7524073220dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Variation1Para", "[", 
    RowBox[{"homo_", ",", " ", "rhs_", ",", " ", "y_", ",", " ", "x_"}], 
    "]"}], ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sol", ",", " ", "y1", ",", " ", "y2", ",", " ", "y3", ",", " ", "w", 
       ",", " ", "w1", ",", " ", "w2", ",", " ", "w3", ",", " ", "v1", ",", 
       " ", "v2", ",", " ", "v3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sol", "=", " ", 
       RowBox[{"DSolve", "[", 
        RowBox[{"homo", ",", " ", 
         RowBox[{"y", "[", "x", "]"}], ",", " ", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y1", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "x", "]"}], "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
          RowBox[{
           RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}], ",", " ", 
          RowBox[{
           RowBox[{"C", "[", "3", "]"}], "\[Rule]", "0"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y2", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "x", "]"}], "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
          RowBox[{
           RowBox[{"C", "[", "2", "]"}], "\[Rule]", "1"}], ",", " ", 
          RowBox[{
           RowBox[{"C", "[", "3", "]"}], "\[Rule]", " ", "0"}]}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"y3", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "x", "]"}], "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
          RowBox[{
           RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}], ",", " ", 
          RowBox[{
           RowBox[{"C", "[", "3", "]"}], "\[Rule]", " ", "1"}]}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"w", " ", "=", " ", 
       RowBox[{"Wronskian", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y1", ",", "y2", ",", "y3"}], "}"}], ",", "x"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"w1", " ", "=", " ", 
       RowBox[{"Wronskian", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y2", ",", "y3"}], "}"}], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w2", " ", "=", " ", 
       RowBox[{"Wronskian", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y1", ",", "y3"}], "}"}], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w3", " ", "=", " ", 
       RowBox[{"Wronskian", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y1", ",", "y2"}], "}"}], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v1", "=", " ", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"w1", "*", "rhs"}], "w"], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v2", "=", " ", 
       RowBox[{"-", 
        RowBox[{"{", 
         RowBox[{"Integrate", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"w2", "*", "rhs"}], "w"], ",", "x"}], "]"}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"v3", "=", " ", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"w3", "*", "rhs"}], "w"], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"q1", "=", 
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{"v1", "*", "y1"}], " ", "+", " ", 
         RowBox[{"v2", "*", "y2"}], " ", "+", " ", 
         RowBox[{"v3", "*", "y3"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "q1", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"y1", ",", "y2", ",", "y3"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"y1", ",", "y2", ",", "y3"}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Orange", ",", 
             RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], "}"}]}], 
        ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"GridLinesStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "Dashed"}], "]"}]}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.878875577779298*^9, 3.8788755889554467`*^9}, {
  3.8791371477029305`*^9, 3.879137154738154*^9}, {3.8791386570267363`*^9, 
  3.8791387118428187`*^9}, {3.8791387555507965`*^9, 3.8791387562269244`*^9}, {
  3.879138796033766*^9, 3.8791387963937597`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"c22b295d-1acb-431e-94f5-06052f0cbb4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question 4: y\[CloseCurlyQuote]\[CloseCurlyQuote]\[CloseCurlyQuote][x] \
+ y\[CloseCurlyQuote]\[CloseCurlyQuote][x] ==Sin[x] ", "Section",
 CellChangeTimes->{{3.8788755930037527`*^9, 3.8788756279118185`*^9}, {
  3.8788756751932573`*^9, 3.8788756999328165`*^9}, {3.879138763130661*^9, 
  3.8791387701859674`*^9}},ExpressionUUID->"0df06202-8fed-4d85-982f-\
cdc9eed84815"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Variation1Para", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "'''"}], "[", "x", "]"}], "+", 
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}]}], "\[Equal]", "0"}], ",", " ", 
    RowBox[{"Sin", "[", "x", "]"}], ",", " ", "y", ",", " ", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.878875628925555*^9, 3.8788756407738347`*^9}, {
  3.8791387421776*^9, 3.8791387433648224`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"b9dd01bd-82de-403f-ad36-a9ebe7b11505"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "-", 
     RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "}"}]], "Print",
 CellChangeTimes->{{3.87913873026073*^9, 3.879138758626978*^9}, 
   3.8791387991999598`*^9, 3.879138929640562*^9},
 CellLabel->
  "During evaluation of \
In[171]:=",ExpressionUUID->"3e2c2dfd-a7ec-4761-8c53-4d5751c11f76"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$793333#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8oHGMDgg/2UkgTvhtkI/mrG4iUM5gg+
a6q7kWSsEpwvfONozqKJinB+0OFZyZqnFOD86ve2ORMey8P5O8pnZa33l4Pz
/SaFKvybKQPnu8/d6+fxRgrOX3a88lpxtCScH9cyRfT8CnE4vy6BeR23sBic
z6Arv9+5VQTOv9U9s331VSE4X4YrY+UXJ0E4P9tUi/W2DD+cn2x+b8Xhw9xw
vlaF1f+8JRxw/sK7wUcqHVnh/OeNojbuEkxw/q6pGq4vwv7uh/ENXt78oj/3
G5zvsus259+wD3B+wcr1PwSFH8P5YWnKCy/VnITzj5+52WUcfMIexrfSPbgp
YPpjOJ+pTPROiuQHOJ+dJ6Ax6d03OL/5wTXnosV/4fwNs9sC6j4xOsD4+YtS
BJ6EscL5cVmzZNsbOeD8zsAyS+M53HA+i8jUZ/W/+OD866dbP7TwC8L5odVJ
ZrMOC8H5Odyvlc5FicD58quPTWN7JQrnV+9wDuafLQ7nFyzL2WamLwnn8zCZ
J+k9lYLzXXNDpmpNloHzJXbK5ruqyMH5k4o6Jhpcl4fzg9r8deduU4DztaJb
QpfUKsL5155xLpocqgTnn0t66igkrwznqy2VlOrsR/Ch+QXOBwAXN/oI
          "]]}, Annotation[#, "Charting`Private`Tag$793333#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[0.006]], 
         LineBox[{{-3., -3.}, {-2.6569705331891815`, -2.6569705331891815`}, \
{-2.261854619413714, -2.261854619413714}, {-1.8337176038270244`, \
-1.8337176038270244`}, {-1.4133758129597247`, -1.4133758129597247`}, \
{-1.0212374100771209`, -1.0212374100771209`}, {-0.5960779053832947, \
-0.5960779053832947}, {-0.1991217886741647, -0.1991217886741647}, {
          0.19003910331557547`, 0.19003910331557547`}, {0.612221097116538, 
          0.612221097116538}, {1.0061997029328045`, 1.0061997029328045`}, {
          1.4331994105602932`, 1.4331994105602932`}, {1.8524038934683922`, 
          1.8524038934683922`}, {2.243404988391795, 2.243404988391795}, {
          2.6674271851264204`, 2.6674271851264204`}, {3., 3.}}]}, 
        Annotation[#, "Charting`Private`Tag$793333#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-9.999999591836735, 9.999999591836735}, {-3, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
          TagBox["x", HoldForm]}]], "1", "x"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8788756350695066`*^9, 3.8788756427507534`*^9}, 
   3.8791371632161903`*^9, {3.879138730463765*^9, 3.8791387587207055`*^9}, 
   3.879138799293648*^9, 3.879138929749936*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"a40b7297-e1e0-4ffa-b2f3-f51914a71e9f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question 5 : \
y\[CloseCurlyQuote]\[CloseCurlyQuote]\[CloseCurlyQuote][x]-y\[CloseCurlyQuote]\
[x]==0", "Section",
 CellChangeTimes->{{3.878875889751543*^9, 3.87887590454168*^9}, {
  3.8788760786045656`*^9, 
  3.8788761084480762`*^9}},ExpressionUUID->"a0a2c0a7-7be4-4493-9c9b-\
223f7d8277cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Variation1Para", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "'''"}], "[", "x", "]"}], "-", 
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}]}], "\[Equal]", "0"}], ",", " ", 
   RowBox[{"Sin", "[", "x", "]"}], ",", " ", "y", ",", " ", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.878875966495489*^9, 3.878875967569879*^9}, {
  3.8788760826319304`*^9, 3.8788760834399595`*^9}, {3.878876119914111*^9, 
  3.878876168499606*^9}, {3.8788762770578375`*^9, 3.878876279221057*^9}, {
  3.8791376726588182`*^9, 3.879137695022704*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"9c2690f5-4b0a-44c2-a71c-df8ed28d78a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"Sin", "[", "x", "]"}]}], ")"}]}], "}"}]], "Print",
 CellChangeTimes->{{3.87913877504821*^9, 3.879138801317004*^9}, 
   3.8791389320841155`*^9},
 CellLabel->
  "During evaluation of \
In[172]:=",ExpressionUUID->"ade55900-aa35-483d-93e7-5a81f9e1dd9a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1: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
5AQ=
          "]]}, Annotation[#, "Charting`Private`Tag$793709#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[0.006]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8oHGMDgg/2UkgTvhtkI/mrG4iUM5gg+
a6q7kWSsEpwvfONozqKJinB+0OFZyZqnFOD86ve2ORMey8P5O8pnZa33l4Pz
/SaFKvybKQPnu8/d6+fxRgrOX3a88lpxtCScH9cyRfT8CnE4vy6BeR23sBic
z6Arv9+5VQTOv9U9s331VSE4X4YrY+UXJ0E4P9tUi/W2DD+cn2x+b8Xhw9xw
vlaF1f+8JRxw/sK7wUcqHVnh/OeNojbuEkxw/q6pGq4vwv7uh/ENXt78oj/3
G5zvsus259+wD3B+wcr1PwSFH8P5YWnKCy/VnITzj5+52WUcfMIexrfSPbgp
YPpjOJ+pTPROiuQHOJ+dJ6Ax6d03OL/5wTXnosV/4fwNs9sC6j4xOsD4+YtS
BJ6EscL5cVmzZNsbOeD8zsAyS+M53HA+i8jUZ/W/+OD866dbP7TwC8L5odVJ
ZrMOC8H5Odyvlc5FicD58quPTWN7JQrnV+9wDuafLQ7nFyzL2WamLwnn8zCZ
J+k9lYLzXXNDpmpNloHzJXbK5ruqyMH5k4o6Jhpcl4fzg9r8deduU4DztaJb
QpfUKsL5155xLpocqgTnn0t66igkrwznqy2VlOrsR/Ch+QXOBwAXN/oI
          "]]}, Annotation[#, "Charting`Private`Tag$793709#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Thickness[0.006]], 
         LineBox[{{-3., -3.}, {-2.6569705331891815`, -2.6569705331891815`}, \
{-2.261854619413714, -2.261854619413714}, {-1.8337176038270244`, \
-1.8337176038270244`}, {-1.4133758129597247`, -1.4133758129597247`}, \
{-1.0212374100771209`, -1.0212374100771209`}, {-0.5960779053832947, \
-0.5960779053832947}, {-0.1991217886741647, -0.1991217886741647}, {
          0.19003910331557547`, 0.19003910331557547`}, {0.612221097116538, 
          0.612221097116538}, {1.0061997029328045`, 1.0061997029328045`}, {
          1.4331994105602932`, 1.4331994105602932`}, {1.8524038934683922`, 
          1.8524038934683922`}, {2.243404988391795, 2.243404988391795}, {
          2.6674271851264204`, 2.6674271851264204`}, {3., 3.}}]}, 
        Annotation[#, "Charting`Private`Tag$793709#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0], 
       Dashing[{Small, Small}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-9.999999591836735, 9.999999591836735}, {-3, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SuperscriptBox["\[ExponentialE]", 
        TagBox["x", HoldForm]], "1", "x"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[0.108]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.006`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8788761302454877`*^9, 3.8788761465620804`*^9}, 
   3.878876385661203*^9, 3.8791371685035243`*^9, {3.879137678318613*^9, 
   3.879137695756196*^9}, {3.8791387751419353`*^9, 3.8791388014107327`*^9}, 
   3.879138932162223*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"00f2a5ab-2550-4d21-b3f7-f0598d8eb1e7"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.878875969886981*^9, 3.878876058544883*^9}, {
  3.87887639891409*^9, 
  3.878876400308488*^9}},ExpressionUUID->"a39fce8b-41ce-4794-bd9e-\
61f7c84cf58a"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.8788758634680243`*^9, {3.8791366283713565`*^9, 3.8791366761813335`*^9}, 
   3.8791369914986763`*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"7839b960-14b3-4d0b-9653-fed26aebb1aa"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.8788754778509665`*^9, {3.878875722569123*^9, 3.8788757961177244`*^9}, 
   3.878875866866783*^9},ExpressionUUID->"f66eb58e-820a-4d95-bbca-\
948509d2502c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.2 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 155, 3, 116, "Title",ExpressionUUID->"9a9db8ae-f3f4-476b-b6ae-8f5f6696f16f"],
Cell[738, 27, 205, 3, 63, "Subtitle",ExpressionUUID->"1b3e810c-1c48-4827-ae93-65ff0271f3fe"],
Cell[946, 32, 172, 3, 80, "Section",ExpressionUUID->"36544ee9-9322-46cf-98fb-ec7f04e7ff87"],
Cell[CellGroupData[{
Cell[1143, 39, 440, 9, 62, "Section",ExpressionUUID->"ab310cf9-5206-45a6-95b5-99c449e927b1"],
Cell[CellGroupData[{
Cell[1608, 52, 3244, 99, 310, "Input",ExpressionUUID->"381d0d54-308c-4d02-a96a-2cc5e6f02bba"],
Cell[4855, 153, 849, 21, 39, "Output",ExpressionUUID->"26875aad-2d40-4f23-8f9f-cf93dc12ad0c"],
Cell[5707, 176, 560, 9, 39, "Output",ExpressionUUID->"7196aee6-2222-42a7-b2d0-3cc082812f06"],
Cell[6270, 187, 560, 9, 39, "Output",ExpressionUUID->"66f23644-360e-4882-9f42-27d4dbc951b9"],
Cell[6833, 198, 531, 8, 39, "Output",ExpressionUUID->"f0a7a13a-0a40-4fcc-b7d9-3fce62f1da44"],
Cell[7367, 208, 590, 10, 39, "Output",ExpressionUUID->"04a3c8f5-4fb6-4f0e-8172-364606a5483e"],
Cell[7960, 220, 531, 8, 39, "Output",ExpressionUUID->"8e0065bd-a1f1-42d2-99db-04ce97635ee6"],
Cell[8494, 230, 722, 15, 39, "Output",ExpressionUUID->"ca0af609-8146-4a01-8818-21c3adc9665e"],
Cell[9219, 247, 51284, 902, 301, "Output",ExpressionUUID->"f99e6781-9e90-4cf3-b960-1d7655c84c21"]
}, Open  ]],
Cell[60518, 1152, 228, 4, 35, InheritFromParent,ExpressionUUID->"e94782cd-6a0c-4970-afc5-37eaf78c5739"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60783, 1161, 199, 3, 80, "Section",ExpressionUUID->"5fc2fbed-cf6b-47f0-9442-04140baed686"],
Cell[60985, 1166, 4188, 109, 380, "Input",ExpressionUUID->"bc46e0f0-621b-41a2-8f78-2283025f4cc2"],
Cell[65176, 1277, 156, 3, 35, "Input",ExpressionUUID->"f0c92a0f-9157-4e50-a063-857e6cd54993"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65369, 1285, 700, 16, 80, "Section",ExpressionUUID->"f5e9a008-d8cd-4317-b418-13443320988e"],
Cell[CellGroupData[{
Cell[66094, 1305, 758, 19, 60, "Input",ExpressionUUID->"0af2acc5-b339-48c4-8a4e-9f61c49dd469"],
Cell[66855, 1326, 736, 22, 48, "Print",ExpressionUUID->"4f269a4e-83fe-4924-8442-3a04ce460506"],
Cell[67594, 1350, 20089, 391, 301, "Output",ExpressionUUID->"c1db5061-96c9-46b0-ad5e-77a5c40982f0"]
}, Open  ]],
Cell[87698, 1744, 177, 3, 35, "Input",ExpressionUUID->"8cc17478-62f4-43a4-9d66-51baeea95e02"],
Cell[CellGroupData[{
Cell[87900, 1751, 729, 20, 39, "Input",ExpressionUUID->"67c15501-9b10-491e-80c4-b93e79319591"],
Cell[88632, 1773, 1178, 36, 47, "Print",ExpressionUUID->"37479bb8-0321-4e70-bce1-479934843035"],
Cell[89813, 1811, 69255, 1199, 301, "Output",ExpressionUUID->"148f79be-876a-4181-8519-7ed642ba81bf"]
}, Open  ]],
Cell[159083, 3013, 196, 4, 60, "Input",ExpressionUUID->"c417804b-8235-43d9-99d3-78d7954458d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159316, 3022, 343, 5, 80, "Section",ExpressionUUID->"73187855-58d2-4923-a025-bedb2e83c34b"],
Cell[CellGroupData[{
Cell[159684, 3031, 592, 16, 60, "Input",ExpressionUUID->"93e698eb-89dc-486a-aca7-1b58b031cc89"],
Cell[160279, 3049, 2113, 60, 51, "Print",ExpressionUUID->"83a33a4a-85fd-4799-9cbd-70abc6bb192f"],
Cell[162395, 3111, 40869, 737, 301, "Output",ExpressionUUID->"14318d25-92de-4f2f-937a-38c669ad9fbd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203313, 3854, 204, 3, 80, "Section",ExpressionUUID->"a9fb9f04-2a71-4cce-8401-7524073220dd"],
Cell[203520, 3859, 5809, 153, 515, "Input",ExpressionUUID->"c22b295d-1acb-431e-94f5-06052f0cbb4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209366, 4017, 375, 5, 80, "Section",ExpressionUUID->"0df06202-8fed-4d85-982f-cdc9eed84815"],
Cell[CellGroupData[{
Cell[209766, 4026, 569, 15, 60, "Input",ExpressionUUID->"b9dd01bd-82de-403f-ad36-a9ebe7b11505"],
Cell[210338, 4043, 430, 12, 44, "Print",ExpressionUUID->"3e2c2dfd-a7ec-4761-8c53-4d5751c11f76"],
Cell[210771, 4057, 24628, 480, 301, "Output",ExpressionUUID->"a40b7297-e1e0-4ffa-b2f3-f51914a71e9f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[235448, 4543, 298, 6, 80, "Section",ExpressionUUID->"a0a2c0a7-7be4-4493-9c9b-223f7d8277cc"],
Cell[CellGroupData[{
Cell[235771, 4553, 674, 16, 35, "Input",ExpressionUUID->"9c2690f5-4b0a-44c2-a71c-df8ed28d78a6"],
Cell[236448, 4571, 408, 12, 44, "Print",ExpressionUUID->"ade55900-aa35-483d-93e7-5a81f9e1dd9a"],
Cell[236859, 4585, 24536, 478, 334, "Output",ExpressionUUID->"00f2a5ab-2550-4d21-b3f7-f0598d8eb1e7"]
}, Open  ]],
Cell[261410, 5066, 200, 4, 35, "Input",ExpressionUUID->"a39fce8b-41ce-4794-bd9e-61f7c84cf58a"],
Cell[261613, 5072, 230, 4, 35, "Input",ExpressionUUID->"7839b960-14b3-4d0b-9653-fed26aebb1aa"],
Cell[261846, 5078, 204, 4, 35, "Input",ExpressionUUID->"f66eb58e-820a-4d95-bbca-948509d2502c"]
}, Open  ]]
}, Open  ]]
}
]
*)

